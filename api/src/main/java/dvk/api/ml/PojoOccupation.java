package dvk.api.ml;

import java.lang.reflect.Field;
import java.math.BigDecimal;

// Generated 4.02.2010 13:44:05 by Hibernate Tools 3.2.4.GA

import dvk.api.DVKAPI.DvkType;
import dvk.api.IOccupationObserver;

/**
 * DhlOccupation generated by hbm2java
 */
public class PojoOccupation implements IOccupationObserver, java.io.Serializable {
    final static String PojoName = PojoOccupation.class.getName();

    /**
     *
     */
    public static class FieldNames {
        public static final String occupationCode = "occupationCode";
        public static final String occupationName = "occupationName";
        public static final String orgCode = "orgCode";
    }

    private static final long serialVersionUID = -1330042026565317258L;
    protected BigDecimal occupationCode;
    protected String occupationName;
    protected String orgCode;

    public PojoOccupation(BigDecimal occupationCode) {
        this.occupationCode = occupationCode;
    }

    public PojoOccupation() {
    }

    public BigDecimal getCode() {
        return this.occupationCode;
    }

    public void setOccupationCode(BigDecimal occupationCode) {
        this.occupationCode = occupationCode;
    }

    public String getName() {
        return this.occupationName;
    }

    public void setOccupationName(String occupationName) {
        this.occupationName = occupationName;
    }

    public String getOrgCode() {
        return this.orgCode;
    }

    public void setOrgCode(String orgCode) {
        this.orgCode = orgCode;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }

        if (obj == null || !(obj instanceof PojoOccupation)) {
            return false;
        }

        PojoOccupation other = (PojoOccupation) obj;

        return Util.hasSameValue(occupationCode, other.occupationCode) && Util.hasSameValue(occupationName, other.occupationName)
                && Util.hasSameValue(orgCode, other.orgCode);
    }

    @Override
    public PojoOccupation clone() {
        PojoOccupation ret = new PojoOccupation();

        ret.occupationCode = occupationCode;
        ret.occupationName = occupationName;
        ret.orgCode = orgCode;

        return ret;
    }

    @Override
    public String toString() {
        return Util.getDump(this);
    }

    public void printOutFields() {
        Field[] fields = getClass().getDeclaredFields();
        for (Field f : fields) {
            System.out.println("public final String " + f.getName() + " = \"" + f.getName() + "\";");
        }
    }

    public BigDecimal getOccupationCode() {
        return occupationCode;
    }

    public String getOccupationName() {
        return occupationName;
    }

    public DvkType getType() {
        return DvkType.Occupation;
    }
}
