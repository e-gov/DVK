Siin kataloogis asuvad viimase versiooni installipaketid, kuid neid on võimlik ka ise tekitada:
- saada SVN serverist vajalikud lähtefailid (check-out-iga):
  - kliendi rakenduse jaoks kaustad "client" ja "core"
  - serveri rakenduse jaoks kaustad "server", "client" ja "core"
- ehitada Maveni abil rakenduse pakett (loe allolevat lühikirjeldust)


Rakenduse ehitamiseks on alates DVK versioonist 1.6.0 kasutusel Maven2 raamistik (http://maven.apache.org/).
Ehitamisskript ise asub projekti juurkataloogis ja kannab nime „pom.xml“.
Selles failis on kirjeldatud ära rakenduse kasutatavad teegid (dependencies) ja rakenduse ehitamise juhised (build). Ehitamiseks toimi järgnevalt:

1.Lae alla Apache Maven versioon 2.x.x (.zip fail).
2.Paki allalaetud pakett lahti.
3.Lisa [MAVEN2_HOME]/bin kataloog keskkonnamuutujasse „PATH“.


Ehitamisjuhend versioonide kõige hilisema rakendustekomplekti jaoks (alates 1.7 versioonist):

1. Käivitage juurkataloogis järgmine käsk

mvn -P {profiili nimi} clean package -DdvkCoreDir="/path/to/coredir" -DdvkClientDir="/path/to/clientdir" -Ddhl.properties="/path/to/dhl.properties" -Dattachments.directory="/path/to/attachments" -Dserver.log.file="/path/to/dvkServer.log"

-D võtmega lisatud parameetrid asendatakse war'i ehitamise käigus automaatselt serveri konfiguratsioonis

N: mvn -P latestRelease clean package -DdvkCoreDir="/var/lib/jenkins/workspace/DVK_trunk_tests/core/development/trunk" -DdvkClientDir="/var/lib/jenkins/workspace/DVK_trunk_tests/client/development/trunk" -Ddhl.properties="/home/tomcat/conf/dhl.properties" -Dattachments.directory="/home/jenkins/attachments" -Dserver.log.file="/usr/share/tomcat6/logs/dvkServer.log"

NB! vajadusel muuta parent pom'is olevat profiili latestRelease

2. Vastavad failid luuakse iga projekti õigesse kataloogi target kausta
N: server/tags/1.7.1/target/dhl.war, client/tags/1.7.1/target/dvk-client.jar, core/tags/1.7.1/target/dvk-core.jar


Ehitamisjuhend versioonide 1.6.3 ning eelnevate jaoks:

4.Ava fail [DVK_SERVER_HOME]/pom.xml tekstiredaktoriga ning muuda järgmised read:

<properties>
	<packageName>dhl</packageName>
	<dvkCoreDir>[DVK_CORE_PROJECT_DIR]</dvkCoreDir>
	<dvkClientDir>[DVK_CLIENT_PROJECT_DIR]</dvkClientDir>
</properties>

Näiteks:

<properties>
	<packageName>dhl</packageName>
	<dvkCoreDir>C:\development\ws\dvk\core</dvkCoreDir>
	<dvkClientDir>C:\development\ws\dvk\client</dvkClientDir>
</properties>

See on vajalik selleks, et DVK serveri projekt kasutab ka dvk-core ja dvk-client teeke.

5. Mine DVK core projekti juurkataloogi ja käivita käsurealt järgmine käsklus:
CMD> mvn install

6. Mine DVK client projekti juurkataloogi ja käivita käsurealt järgmine käsklus:
CMD> mvn install

7.Mine DVK serveri projekti juurkataloogi ja käivita käsurealt järgmine käsklus:
CMD> mvn package

6.Maven ehitab ja paketeerib rakenduse. Kataloogi [DVK_SERVER_HOME]/target tekib fail „dhl.war“.