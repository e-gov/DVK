<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="929dbfae-2c1b-4a4e-a609-76c9e10b1dc4" activeEnvironment="Default" name="DVK_DHX" resourceRoot="${projectDir}" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="66f9bfc2-5d40-41d6-8eb8-5904f11f007e" wsaVersion="NONE" name="dhxBinding" type="wsdl" bindingName="{http://dhx.x-road.eu/producer}dhxBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8084/dvk2/ws/dhx.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8084/dvk2/ws/dhx.wsdl"><con:part><con:url>http://localhost:8084/dvk2/ws/dhx.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://dhx.x-road.eu/producer" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:repr="http://x-road.eu/xsd/representation.xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://dhx.x-road.eu/producer" xmlns:xrd="http://x-road.eu/xsd/xroad.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <schema elementFormDefault="qualified" targetNamespace="http://dhx.x-road.eu/producer" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ref="http://ws-i.org/profiles/basic/1.1/xsd">
      <import namespace="http://ws-i.org/profiles/basic/1.1/xsd" schemaLocation="http://ws-i.org/profiles/basic/1.1/swaref.xsd"/>
      <import namespace="http://x-road.eu/xsd/xroad.xsd" schemaLocation="http://x-road.eu/xsd/xroad.xsd"/>
      <import namespace="http://x-road.eu/xsd/representation.xsd" schemaLocation="http://x-road.eu/xsd/representation.xsd"/>
      <element name="sendDocument">
        <complexType>
          <sequence>
            <element maxOccurs="1" minOccurs="0" name="recipient" type="string">
              <annotation>
                <appinfo>
                  <xrd:title>Recipient code. Needed if representee is used.</xrd:title>
                </appinfo>
              </annotation>
            </element>
            <element maxOccurs="1" minOccurs="0" name="recipientSystem" type="string">
              <annotation>
                <appinfo>
                  <xrd:title>Recipient subSystem name. Needed if representee is
										used and document is sent to representees subsystem.</xrd:title>
                </appinfo>
              </annotation>
            </element>
            <element maxOccurs="1" minOccurs="1" name="consignmentId" type="string">
              <annotation>
                <appinfo>
                  <xrd:title>Unique package id.
										If same document is sent several
										times(if failed for the first
										time for example) then package id
										must stay the same</xrd:title>
                </appinfo>
              </annotation>
            </element>
            <element maxOccurs="1" minOccurs="1" name="documentAttachment" type="ref:swaRef">
              <annotation>
                <appinfo>
                  <xrd:title>Attachment (with swaRef
										description)</xrd:title>
                </appinfo>
              </annotation>
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="sendDocumentResponse">
        <complexType>
          <sequence>
            <element maxOccurs="1" minOccurs="0" name="fault" type="tns:fault"/>
            <element maxOccurs="1" minOccurs="1" name="receiptId" type="string"/>
          </sequence>
        </complexType>
      </element>
      <element name="representationList">
        <complexType>
          <sequence></sequence>
        </complexType>
      </element>
      <element name="representationListResponse">
        <complexType>
          <sequence>
            <element name="representees" type="tns:representees"/>
          </sequence>
        </complexType>
      </element>
      <complexType name="representees">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="representee" type="tns:representee"/>
        </sequence>
      </complexType>
      <complexType name="representee">
        <sequence>
          <element maxOccurs="1" minOccurs="1" name="memberCode" type="string"/>
          <element maxOccurs="1" minOccurs="1" name="representeeName" type="string"/>
          <element maxOccurs="1" minOccurs="0" name="representeeSystem" type="string">
            <annotation>
              <appinfo>
                <xrd:title>Recipient subSystem name.</xrd:title>
              </appinfo>
            </annotation>
          </element>
          <element maxOccurs="1" minOccurs="1" name="startDate" type="dateTime"/>
          <element maxOccurs="1" minOccurs="0" name="endDate" type="dateTime"/>
        </sequence>
      </complexType>
      <complexType name="fault">
        <sequence>
          <element name="faultCode" type="string">
            <annotation>
              <appinfo>
                <xrd:title>Fault Code</xrd:title>
              </appinfo>
            </annotation>
          </element>
          <element name="faultString" type="string">
            <annotation>
              <appinfo>
                <xrd:title>Fault explanation</xrd:title>
              </appinfo>
            </annotation>
          </element>
        </sequence>
      </complexType>
    </schema>
  </wsdl:types>
  <wsdl:message name="requestHeader">
    <wsdl:part element="xrd:client" name="client"/>
    <wsdl:part element="xrd:service" name="service"/>
    <wsdl:part element="repr:representedParty" name="representedParty"/>
    <wsdl:part element="xrd:id" name="id"/>
    <wsdl:part element="xrd:userId" name="userId"/>
    <wsdl:part element="xrd:requestHash" name="requestHash"/>
    <wsdl:part element="xrd:issue" name="issue"/>
    <wsdl:part element="xrd:protocolVersion" name="protocolVersion"/>
  </wsdl:message>
  <wsdl:message name="sendDocument">
    <wsdl:part element="tns:sendDocument" name="body"/>
  </wsdl:message>
  <wsdl:message name="sendDocumentResponse">
    <wsdl:part element="tns:sendDocumentResponse" name="body"/>
  </wsdl:message>
  <wsdl:message name="representationList">
    <wsdl:part element="tns:representationList" name="body"/>
  </wsdl:message>
  <wsdl:message name="representationListResponse">
    <wsdl:part element="tns:representationListResponse" name="body"/>
  </wsdl:message>
  <wsdl:portType name="dhxPortType">
    <wsdl:operation name="sendDocument">
      <wsdl:documentation>
        <xrd:title>Send document</xrd:title>
        <xrd:notes>Operation is sending document.</xrd:notes>
        <xrd:techNotes/>
      </wsdl:documentation>
      <wsdl:input message="tns:sendDocument"/>
      <wsdl:output message="tns:sendDocumentResponse"/>
    </wsdl:operation>
    <wsdl:operation name="representationList">
      <wsdl:documentation>
        <xrd:title>Representation list</xrd:title>
        <xrd:notes>Operation is returning representation list.</xrd:notes>
        <xrd:techNotes/>
      </wsdl:documentation>
      <wsdl:input message="tns:representationList"/>
      <wsdl:output message="tns:representationListResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="dhxBinding" type="tns:dhxPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="sendDocument">
      <soap:operation soapAction="" style="document"/>
      <xrd:version>v1</xrd:version>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:requestHeader" part="client" use="literal"/>
        <soap:header message="tns:requestHeader" part="service" use="literal"/>
        <soap:header message="tns:requestHeader" part="representedParty" use="literal"/>
        <soap:header message="tns:requestHeader" part="id" use="literal"/>
        <soap:header message="tns:requestHeader" part="userId" use="literal"/>
        <soap:header message="tns:requestHeader" part="issue" use="literal"/>
        <soap:header message="tns:requestHeader" part="protocolVersion" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
        <soap:header message="tns:requestHeader" part="client" use="literal"/>
        <soap:header message="tns:requestHeader" part="service" use="literal"/>
        <soap:header message="tns:requestHeader" part="representedParty" use="literal"/>
        <soap:header message="tns:requestHeader" part="id" use="literal"/>
        <soap:header message="tns:requestHeader" part="userId" use="literal"/>
        <soap:header message="tns:requestHeader" part="requestHash" use="literal"/>
        <soap:header message="tns:requestHeader" part="issue" use="literal"/>
        <soap:header message="tns:requestHeader" part="protocolVersion" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="representationList">
      <soap:operation soapAction="" style="document"/>
      <xrd:version>v1</xrd:version>
      <wsdl:input>
        <soap:body use="literal"/>
        <soap:header message="tns:requestHeader" part="client" use="literal"/>
        <soap:header message="tns:requestHeader" part="service" use="literal"/>
        <soap:header message="tns:requestHeader" part="id" use="literal"/>
        <soap:header message="tns:requestHeader" part="userId" use="literal"/>
        <soap:header message="tns:requestHeader" part="issue" use="literal"/>
        <soap:header message="tns:requestHeader" part="protocolVersion" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
        <soap:header message="tns:requestHeader" part="client" use="literal"/>
        <soap:header message="tns:requestHeader" part="service" use="literal"/>
        <soap:header message="tns:requestHeader" part="id" use="literal"/>
        <soap:header message="tns:requestHeader" part="userId" use="literal"/>
        <soap:header message="tns:requestHeader" part="requestHash" use="literal"/>
        <soap:header message="tns:requestHeader" part="issue" use="literal"/>
        <soap:header message="tns:requestHeader" part="protocolVersion" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="dhxService">
    <wsdl:port binding="tns:dhxBinding" name="dhxServicePort">
      <soap:address location="http://TURVASERVER"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://ws-i.org/profiles/basic/1.1/swaref.xsd</con:url><con:content><![CDATA[<!--Copyright (c) 2002-2004 by The Web Services-Interoperability Organization (WS-I) and 
  Certain of its Members. All Rights Reserved.
	
  Notice
  The material contained herein is not a license, either expressly or impliedly, to any 
  intellectual property owned or controlled by any of the authors or developers of this 
  material or WS-I. The material contained herein is provided on an "AS IS" basis and to 
  the maximum extent permitted by applicable law, this material is provided AS IS AND WITH 
  ALL FAULTS, and the authors and developers of this material and WS-I hereby disclaim all 
  other warranties and conditions, either express, implied or statutory, including, but not 
  limited to, any (if any) implied warranties, duties or conditions of  merchantability, 
  of fitness for a particular purpose, of accuracy or completeness of responses, of results, 
  of workmanlike effort, of lack of viruses, and of lack of negligence. ALSO, THERE IS NO 
  WARRANTY OR CONDITION OF TITLE, QUIET ENJOYMENT, QUIET POSSESSION, CORRESPONDENCE TO 
  DESCRIPTION OR NON-INFRINGEMENT WITH REGARD TO THIS MATERIAL.
	
  IN NO EVENT WILL ANY AUTHOR OR DEVELOPER OF THIS MATERIAL OR WS-I BE LIABLE TO ANY OTHER 
  PARTY FOR THE COST OF PROCURING SUBSTITUTE GOODS OR SERVICES, LOST PROFITS, LOSS OF USE, 
  LOSS OF DATA, OR ANY INCIDENTAL, CONSEQUENTIAL, DIRECT, INDIRECT, OR SPECIAL DAMAGES 
  WHETHER UNDER CONTRACT, TORT, WARRANTY, OR OTHERWISE, ARISING IN ANY WAY OUT OF THIS OR 
  ANY OTHER AGREEMENT RELATING TO THIS MATERIAL, WHETHER OR NOT SUCH PARTY HAD ADVANCE 
  NOTICE OF THE POSSIBILITY OF SUCH DAMAGES.
	
  WS-I License Information
  Use of this WS-I Material is governed by the WS-I Test License and other licenses.  Information on these 
  licenses are contained in the README.txt and ReleaseNotes.txt files.  By downloading this file, you agree 
  to the terms of these licenses.
	
  How To Provide Feedback
  The Web Services-Interoperability Organization (WS-I) would like to receive input, 
  suggestions and other feedback ("Feedback") on this work from a wide variety of 
  industry participants to improve its quality over time. 
	
  By sending email, or otherwise communicating with WS-I, you (on behalf of yourself if 
  you are an individual, and your company if you are providing Feedback on behalf of the 
  company) will be deemed to have granted to WS-I, the members of WS-I, and other parties 
  that have access to your Feedback, a non-exclusive, non-transferable, worldwide, perpetual, 
  irrevocable, royalty-free license to use, disclose, copy, license, modify, sublicense or 
  otherwise distribute and exploit in any manner whatsoever the Feedback you provide regarding 
  the work. You acknowledge that you have no expectation of confidentiality with respect to 
  any Feedback you provide. You represent and warrant that you have rights to provide this 
  Feedback, and if you are providing Feedback on behalf of a company, you represent and warrant 
  that you have the rights to provide Feedback on behalf of your company. You also acknowledge 
  that WS-I is not required to review, discuss, use, consider or in any way incorporate your 
  Feedback into future versions of its work. If WS-I does incorporate some or all of your 
  Feedback in a future version of the work, it may, but is not obligated to include your name 
  (or, if you are identified as acting on behalf of your company, the name of your company) on 
  a list of contributors to the work. If the foregoing is not acceptable to you and any company 
  on whose behalf you are acting, please do not provide any Feedback.
	
  Feedback on this document should be directed to wsi-test-comments@ws-i.org.-->
<xsd:schema targetNamespace="http://ws-i.org/profiles/basic/1.1/xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:simpleType name="swaRef">
    <xsd:restriction base="xsd:anyURI"/>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://x-road.eu/xsd/xroad.xsd</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://x-road.eu/xsd/xroad.xsd" xmlns="http://x-road.eu/xsd/xroad.xsd" xmlns:id="http://x-road.eu/xsd/identifiers" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.w3.org/2009/01/xml.xsd"/>
  <xs:import id="id" namespace="http://x-road.eu/xsd/identifiers" schemaLocation="http://x-road.eu/xsd/identifiers.xsd"/>
  <!--Header elements-->
  <xs:element name="client" type="id:XRoadClientIdentifierType">
    <xs:annotation>
      <xs:documentation>Identies service client</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="service" type="id:XRoadServiceIdentifierType">
    <xs:annotation>
      <xs:documentation>Identies the service
                that is invoked by the request</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="centralService" type="id:XRoadCentralServiceIdentifierType">
    <xs:annotation>
      <xs:documentation>Identies the central service
                that is invoked by the request.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="id" type="xs:string">
    <xs:annotation>
      <xs:documentation>Unique identier
                for this message</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="userId" type="xs:string">
    <xs:annotation>
      <xs:documentation>User whose action initiated
                the request</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="requestHash">
    <xs:annotation>
      <xs:documentation>Base64 encoded hash of
                the SOAP request message</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute name="algorithmId" type="xs:string">
            <xs:annotation>
              <xs:documentation>Identies hash algorithm
                                that was used to calculate the value
                                of the requestHash field.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="issue" type="xs:string">
    <xs:annotation>
      <xs:documentation>Identies received application, issue or document
                that was the cause of the service request.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="protocolVersion" type="xs:string">
    <xs:annotation>
      <xs:documentation>X-Road message protocol version</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--Elements describing other elements and operations-->
  <xs:element name="version" type="xs:string">
    <xs:annotation>
      <xs:documentation>Version of the service</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="title">
    <xs:annotation>
      <xs:documentation>Title of the service</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute default="en" ref="xml:lang"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="notes">
    <xs:annotation>
      <xs:documentation>Notes for user</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute ref="xml:lang" default="en"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="techNotes">
    <xs:annotation>
      <xs:documentation>Notes for technical stuff</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute ref="xml:lang" default="en"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://www.w3.org/2009/01/xml.xsd</con:url><con:content><![CDATA[<?xml-stylesheet href="../../2008/09/xsd.xsl" type="text/xsl"?>
<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
  <xs:annotation>
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation>
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://x-road.eu/xsd/identifiers.xsd</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://x-road.eu/xsd/identifiers" xmlns="http://x-road.eu/xsd/identifiers" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:complexType name="XRoadIdentifierType">
    <xs:annotation>
      <xs:documentation>Globally unique identifier in the X-Road system.
                Identifier consists of object type specifier and list of
                hierarchical codes (starting with code that identifiers
                the X-Road instance).</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" ref="xRoadInstance"/>
      <xs:element minOccurs="0" ref="memberClass"/>
      <xs:element minOccurs="0" ref="memberCode"/>
      <xs:element minOccurs="0" ref="subsystemCode"/>
      <xs:element minOccurs="0" ref="groupCode"/>
      <xs:element minOccurs="0" ref="serviceCode"/>
      <xs:element minOccurs="0" ref="serviceVersion"/>
      <xs:element minOccurs="0" ref="securityCategoryCode"/>
      <xs:element minOccurs="0" ref="serverCode"/>
    </xs:sequence>
    <xs:attribute ref="objectType" use="required"/>
  </xs:complexType>
  <xs:simpleType name="XRoadObjectType">
    <xs:annotation>
      <xs:documentation>Enumeration for X-Road identifier
                types.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="MEMBER"/>
      <xs:enumeration value="SUBSYSTEM"/>
      <xs:enumeration value="SERVER"/>
      <xs:enumeration value="GLOBALGROUP"/>
      <xs:enumeration value="LOCALGROUP"/>
      <xs:enumeration value="SECURITYCATEGORY"/>
      <xs:enumeration value="SERVICE"/>
      <xs:enumeration value="CENTRALSERVICE"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="xRoadInstance" type="xs:string">
    <xs:annotation>
      <xs:documentation>Identifies the X-Road instance. This field is
                applicable to all identifier types.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="memberClass" type="xs:string">
    <xs:annotation>
      <xs:documentation>Type of the member (company, government
                institution, private person, etc.)</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="memberCode" type="xs:string">
    <xs:annotation>
      <xs:documentation>Code that uniquely identifies a member of given
                member type.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="subsystemCode" type="xs:string">
    <xs:annotation>
      <xs:documentation>Code that uniquely identifies a subsystem of
                given X-Road member.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="groupCode" type="xs:string">
    <xs:annotation>
      <xs:documentation>Code that uniquely identifies a global group in
                given X-Road instance.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="serviceCode" type="xs:string">
    <xs:annotation>
      <xs:documentation>Code that uniquely identifies a service offered by
                given X-Road member or subsystem.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="serviceVersion" type="xs:string">
    <xs:annotation>
      <xs:documentation>Version of the service.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="securityCategoryCode" type="xs:string">
    <xs:annotation>
      <xs:documentation>Code that uniquely identifies security category in
                a given X-Road instance.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="serverCode" type="xs:string">
    <xs:annotation>
      <xs:documentation>Code that uniquely identifies security server
                offered by a given X-Road member or
                subsystem.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:attribute name="objectType" type="XRoadObjectType"/>
  <xs:complexType name="XRoadClientIdentifierType">
    <xs:complexContent>
      <xs:restriction base="XRoadIdentifierType">
        <xs:sequence>
          <xs:element ref="xRoadInstance"/>
          <xs:element ref="memberClass"/>
          <xs:element ref="memberCode"/>
          <xs:element minOccurs="0" ref="subsystemCode"/>
        </xs:sequence>
        <xs:attribute ref="objectType" use="required"/>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="XRoadServiceIdentifierType">
    <xs:complexContent>
      <xs:restriction base="XRoadIdentifierType">
        <xs:sequence>
          <xs:element ref="xRoadInstance"/>
          <xs:element ref="memberClass"/>
          <xs:element ref="memberCode"/>
          <xs:element minOccurs="0" ref="subsystemCode"/>
          <xs:element ref="serviceCode"/>
          <xs:element minOccurs="0" ref="serviceVersion"/>
        </xs:sequence>
        <xs:attribute ref="objectType" use="required" fixed="SERVICE"/>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="XRoadSecurityCategoryIdentifierType">
    <xs:complexContent>
      <xs:restriction base="XRoadIdentifierType">
        <xs:sequence>
          <xs:element ref="xRoadInstance"/>
          <xs:element ref="securityCategoryCode"/>
        </xs:sequence>
        <xs:attribute ref="objectType" use="required" fixed="SECURITYCATEGORY"/>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="XRoadCentralServiceIdentifierType">
    <xs:complexContent>
      <xs:restriction base="XRoadIdentifierType">
        <xs:sequence>
          <xs:element ref="xRoadInstance"/>
          <xs:element ref="serviceCode"/>
        </xs:sequence>
        <xs:attribute ref="objectType" use="required" fixed="CENTRALSERVICE"/>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="XRoadSecurityServerIdentifierType">
    <xs:complexContent>
      <xs:restriction base="XRoadIdentifierType">
        <xs:sequence>
          <xs:element ref="xRoadInstance"/>
          <xs:element ref="memberClass"/>
          <xs:element ref="memberCode"/>
          <xs:element ref="serverCode"/>
        </xs:sequence>
        <xs:attribute ref="objectType" use="required" fixed="SERVER"/>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="XRoadGlobalGroupIdentifierType">
    <xs:complexContent>
      <xs:restriction base="XRoadIdentifierType">
        <xs:sequence>
          <xs:element ref="xRoadInstance"/>
          <xs:element ref="groupCode"/>
        </xs:sequence>
        <xs:attribute ref="objectType" use="required" fixed="GLOBALGROUP"/>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="XRoadLocalGroupIdentifierType">
    <xs:complexContent>
      <xs:restriction base="XRoadIdentifierType">
        <xs:sequence>
          <xs:element ref="groupCode"/>
        </xs:sequence>
        <xs:attribute ref="objectType" use="required" fixed="LOCALGROUP"/>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://x-road.eu/xsd/representation.xsd</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="http://x-road.eu/xsd/representation.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://x-road.eu/xsd/representation.xsd">
  <xs:element name="partyClass" type="xs:string">
    <xs:annotation>
      <xs:documentation>Class of the represented party.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="partyCode" type="xs:string">
    <xs:annotation>
      <xs:documentation>Code of the represented party.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="XRoadRepresentedPartyType">
    <xs:sequence>
      <xs:element minOccurs="0" ref="partyClass"/>
      <xs:element minOccurs="1" ref="partyCode"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="representedParty" type="XRoadRepresentedPartyType">
    <xs:annotation>
      <xs:documentation>Identifies a party that is being
                represented in a service request.</xs:documentation>
    </xs:annotation>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8084/dvk/ws</con:endpoint></con:endpoints><con:operation id="1a7163e0-856c-4eef-87f5-d1bb3ce62943" isOneWay="false" action="" name="representationList" bindingOperationName="representationList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b503b5c3-7637-4e2f-8c93-79b612937938" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.0.13.51:8080/etalon1/ws/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xro="http://x-road.eu/xsd/xroad.xsd" xmlns:iden="http://x-road.eu/xsd/identifiers" xmlns:prod="http://dhx.x-road.eu/producer">
   <soapenv:Header>
       <ns4:protocolVersion xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">4.0</ns4:protocolVersion>
    <ns4:id xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers"
      xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">64a3ddbd-1620-42c4-b2fe-60b854c2f32f
    </ns4:id>
    <ns4:client xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>ee-dev</ns3:xRoadInstance>
      <ns3:memberClass>GOV</ns3:memberClass>
      <ns3:memberCode>adit</ns3:memberCode>
      <ns3:subsystemCode>DHX</ns3:subsystemCode>
    </ns4:client>
    <ns4:service xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/"
      ns3:objectType="SERVICE">
      <ns3:xRoadInstance>ee-dev</ns3:xRoadInstance>
      <ns3:memberClass>COM</ns3:memberClass>
      <ns3:memberCode>30000001</ns3:memberCode>
      <ns3:subsystemCode>DHX</ns3:subsystemCode>
      <ns3:serviceCode>sendDocument</ns3:serviceCode>
      <ns3:serviceVersion>v1</ns3:serviceVersion>
    </ns4:service>
   </soapenv:Header>
   <soapenv:Body>
      <prod:sendDocument>
         <!--Optional:-->
         <prod:documentAttachment>cid:doc</prod:documentAttachment>
           <prod:recipient>70006317</prod:recipient>
         <prod:consignmentId>4567787764</prod:consignmentId>
      </prod:sendDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://dhx.x-road.eu/producer/dhxPortType/representationListRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="e842b44f-4d53-4bd3-b9a5-5f9110af0f4f" isOneWay="false" action="" name="sendDocument" bindingOperationName="sendDocument" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f0fd3eba-71a5-422a-8175-b594e396be0e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8084/dvk/ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xro="http://x-road.eu/xsd/xroad.xsd" xmlns:rep="http://x-road.eu/xsd/representation.xsd" xmlns:iden="http://x-road.eu/xsd/identifiers" xmlns:prod="http://dhx.x-road.eu/producer">\r
   <soapenv:Header>\r
      <xro:protocolVersion>?</xro:protocolVersion>\r
      <xro:issue>?</xro:issue>\r
      <xro:userId>?</xro:userId>\r
      <xro:id>?</xro:id>\r
      <rep:representedParty>\r
         <!--Optional:-->\r
         <rep:partyClass>?</rep:partyClass>\r
         <rep:partyCode>?</rep:partyCode>\r
      </rep:representedParty>\r
      <xro:service iden:objectType="SERVICE">\r
         <iden:xRoadInstance>?</iden:xRoadInstance>\r
         <iden:memberClass>?</iden:memberClass>\r
         <iden:memberCode>?</iden:memberCode>\r
         <!--Optional:-->\r
         <iden:subsystemCode>?</iden:subsystemCode>\r
         <iden:serviceCode>?</iden:serviceCode>\r
         <!--Optional:-->\r
         <iden:serviceVersion>?</iden:serviceVersion>\r
      </xro:service>\r
      <xro:client iden:objectType="?">\r
         <iden:xRoadInstance>?</iden:xRoadInstance>\r
         <iden:memberClass>?</iden:memberClass>\r
         <iden:memberCode>?</iden:memberCode>\r
         <!--Optional:-->\r
         <iden:subsystemCode>?</iden:subsystemCode>\r
      </xro:client>\r
   </soapenv:Header>\r
   <soapenv:Body>\r
      <prod:sendDocument>\r
         <!--Optional:-->\r
         <prod:recipient>?</prod:recipient>\r
         <!--Optional:-->\r
         <prod:recipientSystem>?</prod:recipientSystem>\r
         <prod:consignmentId>?</prod:consignmentId>\r
         <prod:documentAttachment>cid:803149665201</prod:documentAttachment>\r
      </prod:sendDocument>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://dhx.x-road.eu/producer/dhxPortType/sendDocumentRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="736c021c-7d30-4821-9142-b64530ab6edf" wsaVersion="NONE" name="dhlHttpSoapPortSoapBinding" type="wsdl" bindingName="{http://localhost:8084/dvk/services/dhlHttpSoapPort}dhlHttpSoapPortSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8084/dvk/services/dhlHttpSoapPort?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8084/dvk2/services/dhlHttpSoapPort?wsdl"><con:part><con:url>http://localhost:8084/dvk2/services/dhlHttpSoapPort?wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://localhost:8084/dvk2/services/dhlHttpSoapPort" xmlns:apachesoap="http://xml.apache.org/xml-soap" xmlns:impl="http://localhost:8084/dvk2/services/dhlHttpSoapPort" xmlns:intf="http://localhost:8084/dvk2/services/dhlHttpSoapPort" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--WSDL created by Apache Axis version: 1.4
Built on Apr 22, 2006 (06:55:48 PDT)-->
  <wsdl:message name="getSendingOptionsResponse"></wsdl:message>
  <wsdl:message name="changeOrganizationDataRequest">
    <wsdl:part name="keha" type="xsd:anyType"/>
  </wsdl:message>
  <wsdl:message name="receiveDocumentsResponse"></wsdl:message>
  <wsdl:message name="getOccupationListRequest">
    <wsdl:part name="keha" type="xsd:anyType"/>
  </wsdl:message>
  <wsdl:message name="listMethodsResponse"></wsdl:message>
  <wsdl:message name="getSubdivisionListResponse"></wsdl:message>
  <wsdl:message name="deleteOldDocumentsRequest">
    <wsdl:part name="keha" type="xsd:anyType"/>
  </wsdl:message>
  <wsdl:message name="getSendStatusRequest">
    <wsdl:part name="p1" type="xsd:anyType"/>
    <wsdl:part name="keha" type="xsd:anyType"/>
  </wsdl:message>
  <wsdl:message name="getOccupationListResponse"></wsdl:message>
  <wsdl:message name="deleteOldDocumentsResponse"></wsdl:message>
  <wsdl:message name="listMethodsRequest"></wsdl:message>
  <wsdl:message name="sendDocumentsRequest">
    <wsdl:part name="p1" type="xsd:anyType"/>
    <wsdl:part name="keha" type="xsd:anyType"/>
  </wsdl:message>
  <wsdl:message name="sendDocumentsResponse"></wsdl:message>
  <wsdl:message name="changeOrganizationDataResponse"></wsdl:message>
  <wsdl:message name="receiveDocumentsRequest">
    <wsdl:part name="keha" type="xsd:anyType"/>
  </wsdl:message>
  <wsdl:message name="getSendingOptionsRequest">
    <wsdl:part name="keha" type="xsd:anyType"/>
  </wsdl:message>
  <wsdl:message name="getSubdivisionListRequest">
    <wsdl:part name="keha" type="xsd:anyType"/>
  </wsdl:message>
  <wsdl:message name="runSystemCheckRequest">
    <wsdl:part name="keha" type="xsd:anyType"/>
  </wsdl:message>
  <wsdl:message name="getSendStatusResponse"></wsdl:message>
  <wsdl:message name="runSystemCheckResponse"></wsdl:message>
  <wsdl:message name="markDocumentsReceivedRequest">
    <wsdl:part name="p1" type="xsd:anyType"/>
    <wsdl:part name="keha" type="xsd:anyType"/>
  </wsdl:message>
  <wsdl:message name="markDocumentsReceivedResponse"></wsdl:message>
  <wsdl:portType name="CoreServices">
    <wsdl:operation name="getOccupationList" parameterOrder="keha">
      <wsdl:input message="impl:getOccupationListRequest" name="getOccupationListRequest"/>
      <wsdl:output message="impl:getOccupationListResponse" name="getOccupationListResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getSubdivisionList" parameterOrder="keha">
      <wsdl:input message="impl:getSubdivisionListRequest" name="getSubdivisionListRequest"/>
      <wsdl:output message="impl:getSubdivisionListResponse" name="getSubdivisionListResponse"/>
    </wsdl:operation>
    <wsdl:operation name="runSystemCheck" parameterOrder="keha">
      <wsdl:input message="impl:runSystemCheckRequest" name="runSystemCheckRequest"/>
      <wsdl:output message="impl:runSystemCheckResponse" name="runSystemCheckResponse"/>
    </wsdl:operation>
    <wsdl:operation name="changeOrganizationData" parameterOrder="keha">
      <wsdl:input message="impl:changeOrganizationDataRequest" name="changeOrganizationDataRequest"/>
      <wsdl:output message="impl:changeOrganizationDataResponse" name="changeOrganizationDataResponse"/>
    </wsdl:operation>
    <wsdl:operation name="deleteOldDocuments" parameterOrder="keha">
      <wsdl:input message="impl:deleteOldDocumentsRequest" name="deleteOldDocumentsRequest"/>
      <wsdl:output message="impl:deleteOldDocumentsResponse" name="deleteOldDocumentsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="sendDocuments" parameterOrder="p1 keha">
      <wsdl:input message="impl:sendDocumentsRequest" name="sendDocumentsRequest"/>
      <wsdl:output message="impl:sendDocumentsResponse" name="sendDocumentsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="markDocumentsReceived" parameterOrder="p1 keha">
      <wsdl:input message="impl:markDocumentsReceivedRequest" name="markDocumentsReceivedRequest"/>
      <wsdl:output message="impl:markDocumentsReceivedResponse" name="markDocumentsReceivedResponse"/>
    </wsdl:operation>
    <wsdl:operation name="receiveDocuments" parameterOrder="keha">
      <wsdl:input message="impl:receiveDocumentsRequest" name="receiveDocumentsRequest"/>
      <wsdl:output message="impl:receiveDocumentsResponse" name="receiveDocumentsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getSendStatus" parameterOrder="p1 keha">
      <wsdl:input message="impl:getSendStatusRequest" name="getSendStatusRequest"/>
      <wsdl:output message="impl:getSendStatusResponse" name="getSendStatusResponse"/>
    </wsdl:operation>
    <wsdl:operation name="listMethods">
      <wsdl:input message="impl:listMethodsRequest" name="listMethodsRequest"/>
      <wsdl:output message="impl:listMethodsResponse" name="listMethodsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getSendingOptions" parameterOrder="keha">
      <wsdl:input message="impl:getSendingOptionsRequest" name="getSendingOptionsRequest"/>
      <wsdl:output message="impl:getSendingOptionsResponse" name="getSendingOptionsResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="dhlHttpSoapPortSoapBinding" type="impl:CoreServices">
    <wsdlsoap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getOccupationList">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getOccupationListRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://localhost:8084/dvk2/services/dhlHttpSoapPort" use="encoded"/>
      </wsdl:input>
      <wsdl:output name="getOccupationListResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://localhost:8084/dvk2/services/dhlHttpSoapPort" use="encoded"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSubdivisionList">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getSubdivisionListRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://localhost:8084/dvk2/services/dhlHttpSoapPort" use="encoded"/>
      </wsdl:input>
      <wsdl:output name="getSubdivisionListResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://localhost:8084/dvk2/services/dhlHttpSoapPort" use="encoded"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="runSystemCheck">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="runSystemCheckRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://localhost:8084/dvk2/services/dhlHttpSoapPort" use="encoded"/>
      </wsdl:input>
      <wsdl:output name="runSystemCheckResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://localhost:8084/dvk2/services/dhlHttpSoapPort" use="encoded"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="changeOrganizationData">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="changeOrganizationDataRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://localhost:8084/dvk2/services/dhlHttpSoapPort" use="encoded"/>
      </wsdl:input>
      <wsdl:output name="changeOrganizationDataResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://localhost:8084/dvk2/services/dhlHttpSoapPort" use="encoded"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteOldDocuments">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="deleteOldDocumentsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://localhost:8084/dvk2/services/dhlHttpSoapPort" use="encoded"/>
      </wsdl:input>
      <wsdl:output name="deleteOldDocumentsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://localhost:8084/dvk2/services/dhlHttpSoapPort" use="encoded"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendDocuments">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="sendDocumentsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://localhost:8084/dvk2/services/dhlHttpSoapPort" use="encoded"/>
      </wsdl:input>
      <wsdl:output name="sendDocumentsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://localhost:8084/dvk2/services/dhlHttpSoapPort" use="encoded"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="markDocumentsReceived">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="markDocumentsReceivedRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://localhost:8084/dvk2/services/dhlHttpSoapPort" use="encoded"/>
      </wsdl:input>
      <wsdl:output name="markDocumentsReceivedResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://localhost:8084/dvk2/services/dhlHttpSoapPort" use="encoded"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="receiveDocuments">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="receiveDocumentsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://localhost:8084/dvk2/services/dhlHttpSoapPort" use="encoded"/>
      </wsdl:input>
      <wsdl:output name="receiveDocumentsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://localhost:8084/dvk2/services/dhlHttpSoapPort" use="encoded"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSendStatus">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getSendStatusRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://localhost:8084/dvk2/services/dhlHttpSoapPort" use="encoded"/>
      </wsdl:input>
      <wsdl:output name="getSendStatusResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://localhost:8084/dvk2/services/dhlHttpSoapPort" use="encoded"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="listMethods">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="listMethodsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://dhl" use="encoded"/>
      </wsdl:input>
      <wsdl:output name="listMethodsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://localhost:8084/dvk2/services/dhlHttpSoapPort" use="encoded"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSendingOptions">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getSendingOptionsRequest">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://dhl" use="encoded"/>
      </wsdl:input>
      <wsdl:output name="getSendingOptionsResponse">
        <wsdlsoap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://localhost:8084/dvk2/services/dhlHttpSoapPort" use="encoded"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CoreServicesService">
    <wsdl:port binding="impl:dhlHttpSoapPortSoapBinding" name="dhlHttpSoapPort">
      <wsdlsoap:address location="http://localhost:8084/dvk2/services/dhlHttpSoapPort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8084/dvk/services/dhlHttpSoapPort</con:endpoint></con:endpoints><con:operation id="f234d410-e9cd-470b-8cf4-182eb85ce561" isOneWay="false" action="" name="changeOrganizationData" bindingOperationName="changeOrganizationData" type="Request-Response" outputName="changeOrganizationDataResponse" inputName="changeOrganizationDataRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6ea38d67-e51d-4af5-a980-15255fcc5b68" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8084/dvk/services/dhlHttpSoapPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://localhost:8084/dvk/services/dhlHttpSoapPort">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <dhl:changeOrganizationData soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">\r
         <keha xsi:type="xsd:anyType">?</keha>\r
      </dhl:changeOrganizationData>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/changeOrganizationDataRequest"/></con:call></con:operation><con:operation id="e1258ea4-2d0b-4cde-ac10-0ae205bba731" isOneWay="false" action="" name="deleteOldDocuments" bindingOperationName="deleteOldDocuments" type="Request-Response" outputName="deleteOldDocumentsResponse" inputName="deleteOldDocumentsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0ec3de45-d84d-4dab-8e35-5d8c9b116e63" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8084/dvk/services/dhlHttpSoapPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://localhost:8084/dvk/services/dhlHttpSoapPort">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <dhl:deleteOldDocuments soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">\r
         <keha xsi:type="xsd:anyType">?</keha>\r
      </dhl:deleteOldDocuments>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/deleteOldDocumentsRequest"/></con:call></con:operation><con:operation id="63eceb1a-8d51-4264-ab31-53468f2b31d8" isOneWay="false" action="" name="getOccupationList" bindingOperationName="getOccupationList" type="Request-Response" outputName="getOccupationListResponse" inputName="getOccupationListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ded145dd-b6a9-4c8a-ae2d-cda9f37d0377" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8084/dvk/services/dhlHttpSoapPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://localhost:8084/dvk/services/dhlHttpSoapPort">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <dhl:getOccupationList soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">\r
         <keha xsi:type="xsd:anyType">?</keha>\r
      </dhl:getOccupationList>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/getOccupationListRequest"/></con:call></con:operation><con:operation id="65fab19a-fb51-4787-903c-4c1bcc134548" isOneWay="false" action="" name="getSendingOptions" bindingOperationName="getSendingOptions" type="Request-Response" outputName="getSendingOptionsResponse" inputName="getSendingOptionsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1ee2588a-ec78-4690-8964-944d4bcca932" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8084/dvk/services/dhlHttpSoapPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://dhl">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <dhl:getSendingOptions soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">\r
         <keha xsi:type="xsd:anyType">?</keha>\r
      </dhl:getSendingOptions>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/getSendingOptionsRequest"/></con:call></con:operation><con:operation id="13d47b3a-06c2-43e9-8de3-c311e4e95448" isOneWay="false" action="" name="getSendStatus" bindingOperationName="getSendStatus" type="Request-Response" outputName="getSendStatusResponse" inputName="getSendStatusRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5cf87e8d-8387-42ff-ba2f-924ec99231d1" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8084/dvk/services/dhlHttpSoapPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://localhost:8084/dvk/services/dhlHttpSoapPort">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <dhl:getSendStatus soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">\r
         <p1 xsi:type="xsd:anyType">?</p1>\r
         <keha xsi:type="xsd:anyType">?</keha>\r
      </dhl:getSendStatus>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/getSendStatusRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="47c5743c-c9a7-4599-a6d5-251fd8d3d895" isOneWay="false" action="" name="getSubdivisionList" bindingOperationName="getSubdivisionList" type="Request-Response" outputName="getSubdivisionListResponse" inputName="getSubdivisionListRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ab724a22-fdfb-42e4-aca9-353759b9db19" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8084/dvk/services/dhlHttpSoapPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://localhost:8084/dvk/services/dhlHttpSoapPort">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <dhl:getSubdivisionList soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">\r
         <keha xsi:type="xsd:anyType">?</keha>\r
      </dhl:getSubdivisionList>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/getSubdivisionListRequest"/></con:call></con:operation><con:operation id="c3f97693-c313-424f-9a0f-e7f25cc8c33e" isOneWay="false" action="" name="listMethods" bindingOperationName="listMethods" type="Request-Response" outputName="listMethodsResponse" inputName="listMethodsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="aa35207e-eaa0-49d4-9e27-56f5939a0cc2" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8084/dvk/services/dhlHttpSoapPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://dhl">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <dhl:listMethods soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/listMethodsRequest"/></con:call></con:operation><con:operation id="48228ed7-b081-40fe-b3da-28d9e16eb656" isOneWay="false" action="" name="markDocumentsReceived" bindingOperationName="markDocumentsReceived" type="Request-Response" outputName="markDocumentsReceivedResponse" inputName="markDocumentsReceivedRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5de207d8-9803-4e3c-a45a-5999045e5bca" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8084/dvk/services/dhlHttpSoapPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://localhost:8084/dvk/services/dhlHttpSoapPort">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <dhl:markDocumentsReceived soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">\r
         <p1 xsi:type="xsd:anyType">?</p1>\r
         <keha xsi:type="xsd:anyType">?</keha>\r
      </dhl:markDocumentsReceived>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/markDocumentsReceivedRequest"/></con:call></con:operation><con:operation id="9c491f0f-998c-4c48-97f8-486a20e13378" isOneWay="false" action="" name="receiveDocuments" bindingOperationName="receiveDocuments" type="Request-Response" outputName="receiveDocumentsResponse" inputName="receiveDocumentsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1465bd93-4ec5-4a88-bd24-51773e70f33c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8084/dvk/services/dhlHttpSoapPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://localhost:8084/dvk/services/dhlHttpSoapPort">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <dhl:receiveDocuments soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">\r
         <keha xsi:type="xsd:anyType">?</keha>\r
      </dhl:receiveDocuments>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/receiveDocumentsRequest"/></con:call></con:operation><con:operation id="e9243d16-5903-4a7e-92e6-07983c244a74" isOneWay="false" action="" name="runSystemCheck" bindingOperationName="runSystemCheck" type="Request-Response" outputName="runSystemCheckResponse" inputName="runSystemCheckRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3f8145f5-f56a-46b3-867e-1be43153a1cb" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8084/dvk/services/dhlHttpSoapPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://localhost:8084/dvk/services/dhlHttpSoapPort">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <dhl:runSystemCheck soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">\r
         <keha xsi:type="xsd:anyType">?</keha>\r
      </dhl:runSystemCheck>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/runSystemCheckRequest"/></con:call></con:operation><con:operation id="88029226-be7b-407d-81e5-27fc54e59291" isOneWay="false" action="" name="sendDocuments" bindingOperationName="sendDocuments" type="Request-Response" outputName="sendDocumentsResponse" inputName="sendDocumentsRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7b3fec53-cae8-4344-bce7-3cff357d67fb" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8084/dvk/services/dhlHttpSoapPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://localhost:8084/dvk/services/dhlHttpSoapPort">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <dhl:sendDocuments soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">\r
         <p1 xsi:type="xsd:anyType">?</p1>\r
         <keha xsi:type="xsd:anyType">?</keha>\r
      </dhl:sendDocuments>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/sendDocumentsRequest"/></con:call></con:operation></con:interface><con:testSuite id="4fe3fd86-c575-408a-9fec-0622c7cf91d0" name="DHX tests"><con:description>Propertites on kirjeldatud xtee liikmete andmed mis on vaja muuta sõltuvalt kekskonnast. Lisaks on vaja muuta ka kapli failid, kuna manustena on pandud kapsli failid milledes on kirjeldatud saatjana ja adressaatidena samad Xtee liimed.</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="947b51f6-967d-4bbd-ae9b-fa23cfa5a950" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="1.1. Õige kapsli saatmine" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Attach file from filesystem" id="cb6fd419-b792-4cf1-88d7-517b187eab79"><con:settings/><con:config><script><![CDATA[import groovy.xml.MarkupBuilder
import org.custommonkey.xmlunit.*
import java.util.Random  
import java.security.MessageDigest
import java.nio.file.*


    def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
    def projectPath = groovyUtils.projectPath
    log.info projectPath

    def project = testRunner.testCase.testSuite.project
        log.info "Project: " + project.name
        def myTestSuite = testRunner.testCase.testSuite;
        log.info "TestSuite: " + myTestSuite.name

    def testCase = testRunner.testCase
    log.info "TestCase: " + testCase.name

    def testStepUploadDataAfterCheck = testCase.getTestStepByName("sendDocument")
    def request= testStepUploadDataAfterCheck.testRequest
    log.info "TestStep: " + testStepUploadDataAfterCheck.name


    // clear existing attachments
    for( a in request.attachments ) {
        request.removeAttachment( a )
    }

    //FileNamePath
    def fileNamePath = testRunner.testCase.testSuite.project.getPropertyValue( "goodCapsule" )
    //FileName
   // def fileName = testCase.getTestStepAt(testRunner.testCase.getTestStepIndexByName("FileNameProperties")).getProperty("FileName")

    // get file to attach
    log.info "file to attach: " + fileNamePath
    def file = new File(fileNamePath )
    if ( file == null) {
        log.error "bad filename"
    }   
    else 
    {
    	FileInputStream attFile = null;
     ByteArrayOutputStream bos = null;
    	try{
	        // attach and set properties
	       def senderMemberCode = testRunner.testCase.testSuite.project.getPropertyValue( "dhs2MemberCode" )
	       def recipientMemberCode =  testRunner.testCase.testSuite.project.getPropertyValue( "dhs3MemberCode" )
	       attFile = new FileInputStream(fileNamePath)
	       def attStr = attFile.text;
	      attStr = attStr.replaceAll( /(?ms)(<DecSender>.*?<OrganisationCode>.*?<\/OrganisationCode>)/, '<DecSender><OrganisationCode>'+ senderMemberCode + '</OrganisationCode>')
	      attStr = attStr.replaceAll( /(?ms)(<DecRecipient>.*?<OrganisationCode>.*?<\/OrganisationCode>)/, '<DecRecipient><OrganisationCode>'+ recipientMemberCode + '</OrganisationCode>')
	      log.info(attStr)
	       bos = new ByteArrayOutputStream();
	       bos.write(attStr.getBytes("UTF-8"))
	       def attachment = request.attachBinaryData(bos.toByteArray(), 'text/plain' )
	        //def attachment = request.attachFile( file, true )
	       // attachment.contentType = "application/octet-stream"
	        attachment.setContentID("doc")
    	}  catch(Exception ex) {
  	log.error(ex.getMessage(), ex);
  	} finally  {
  	  	if(attFile != null) {
  	  		attFile.close();
  	  	}
  	  	if(bos != null) {
  	  		bos.close();
  	  	}
  	}
    	
       // def holder2 = groovyUtils.getXmlHolder( "sendDocument#Request" ) // Get Request body
      //  holder2.setNodeValue( "//upl:UploadDataAfterCheckRequest/uploadedData","cid:"+fileName.getValue()); //Set "link" to attachment in request body
      //  holder2.updateProperty() //and update
        log.info "file attached succesfully"
    }]]></script></con:config></con:testStep><con:testStep type="request" id="8230346c-2abb-41b8-8b16-dd3ca62a1eae" name="sendDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>dhxBinding</con:interface><con:operation>sendDocument</con:operation><con:request name="sendDocument" id="8c69dc96-bceb-4568-aec0-103f223d1bdd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#dhxEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xro="http://x-road.eu/xsd/xroad.xsd" xmlns:iden="http://x-road.eu/xsd/identifiers" xmlns:prod="http://dhx.x-road.eu/producer">
   <soapenv:Header>
       <ns4:protocolVersion xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">4.0</ns4:protocolVersion>
    <ns4:id xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers"
      xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">64a3ddbd-1620-42c4-b2fe-60b854c2f32f
    </ns4:id>
    <ns4:client xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dhs2MemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dhs2MemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dhs2Subsystem}</ns3:subsystemCode>
    </ns4:client>
    <ns4:service xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/"
      ns3:objectType="SERVICE">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dvkMemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dvkMemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dvkDhxSubsystem}</ns3:subsystemCode>
      <ns3:serviceCode>sendDocument</ns3:serviceCode>
      <ns3:serviceVersion>v1</ns3:serviceVersion>
    </ns4:service>
   </soapenv:Header>
   <soapenv:Body>
      <prod:sendDocument>
         <!--Optional:-->
          <prod:DHXVersion>1.0</prod:DHXVersion>
         <prod:documentAttachment>cid:doc</prod:documentAttachment>
           <prod:recipient>${#Project#dhs3MemberCode}</prod:recipient>
         <prod:consignmentId>${=java.util.UUID.randomUUID()}</prod:consignmentId>
      </prod:sendDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="2b15a208-994a-445e-beec-adba493be048" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d9c51142-4686-4a66-a24c-d0ee72472f9f" name="Contains receiptId"><con:configuration><token>receiptId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="30b27822-a222-4a2b-bc64-f2e1492481a7" name="Not Contains fault"><con:configuration><token>fault</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="773d8538-911d-4748-a4b5-5358ff3b5460" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>binaryContent7711131495767407061.tmp</con:name><con:contentType>text/plain</con:contentType><con:contentId>doc</con:contentId><con:url>../../BPW~1.BPW/AppData/Local/Temp/binaryContent7711131495767407061.tmp</con:url><con:id>7c4d40b9-05c4-48ad-abcd-35b3e5304499</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://dhx.x-road.eu/producer/dhxPortType/sendDocumentRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="DHX receipt id to property" id="58161129-3caa-4c45-bf65-3f8d75f3374f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>DHX receipt ID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>sendDocument</con:sourceStep><con:sourcePath>declare namespace ns3='http://dhx.x-road.eu/producer'; 
//ns3:sendDocumentResponse[1]/ns3:receiptId[1]</con:sourcePath><con:targetType>dhxReceiptId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>dhxReceiptId</con:name><con:value>14210</con:value></con:property></con:properties></con:testCase><con:testCase id="2ce9e775-7fdf-42ad-b532-9de6b2a8c69b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="1.2. Õige kapsli saatmine alamsüsteemile" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Attach file from filesystem" id="47f60431-cbe0-484b-a9f9-8751794183ba"><con:settings/><con:config><script><![CDATA[import groovy.xml.MarkupBuilder
import org.custommonkey.xmlunit.*
import java.util.Random  
import java.security.MessageDigest
import java.nio.file.*


    def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
    def projectPath = groovyUtils.projectPath
    log.info projectPath

    def project = testRunner.testCase.testSuite.project
        log.info "Project: " + project.name
        def myTestSuite = testRunner.testCase.testSuite;
        log.info "TestSuite: " + myTestSuite.name

    def testCase = testRunner.testCase
    log.info "TestCase: " + testCase.name

    def testStepUploadDataAfterCheck = testCase.getTestStepByName("sendDocument")
    def request= testStepUploadDataAfterCheck.testRequest
    log.info "TestStep: " + testStepUploadDataAfterCheck.name


    // clear existing attachments
    for( a in request.attachments ) {
        request.removeAttachment( a )
    }

    //FileNamePath
    def fileNamePath = testRunner.testCase.testSuite.project.getPropertyValue( "goodCapsule" )
    //FileName
   // def fileName = testCase.getTestStepAt(testRunner.testCase.getTestStepIndexByName("FileNameProperties")).getProperty("FileName")

    // get file to attach
    log.info "file to attach: " + fileNamePath
    def file = new File(fileNamePath )
    if ( file == null) {
        log.error "bad filename"
    }   
    else 
    {
        	FileInputStream attFile = null;
     ByteArrayOutputStream bos = null;
    	try{
	        // attach and set properties
	       def senderMemberCode = testRunner.testCase.testSuite.project.getPropertyValue( "dhs2MemberCode" )
	       def recipientMemberCode =  testRunner.testCase.testSuite.project.getPropertyValue( "dhs3Subsystem2" )
	       attFile = new FileInputStream(fileNamePath)
	       def attStr = attFile.text;
	      attStr = attStr.replaceAll( /(?ms)(<DecSender>.*?<OrganisationCode>.*?<\/OrganisationCode>)/, '<DecSender><OrganisationCode>'+ senderMemberCode + '</OrganisationCode>')
	      attStr = attStr.replaceAll( /(?ms)(<DecRecipient>.*?<OrganisationCode>.*?<\/OrganisationCode>)/, '<DecRecipient><OrganisationCode>'+ recipientMemberCode + '</OrganisationCode>')
	       bos = new ByteArrayOutputStream();
	        bos.write(attStr.getBytes("UTF-8"))
	       def attachment = request.attachBinaryData(bos.toByteArray(), 'application/octet-stream' )
	        //def attachment = request.attachFile( file, true )
	       // attachment.contentType = "application/octet-stream"
	        attachment.setContentID("doc")
    	}  catch(Exception ex) {
  	log.error(ex.getMessage(), ex);
  	} finally  {
  	  	if(attFile != null) {
  	  		attFile.close();
  	  	}
  	  	if(bos != null) {
  	  		bos.close();
  	  	}
  	}
        log.info "file attached succesfully"
    }]]></script></con:config></con:testStep><con:testStep type="request" id="210a07c6-b06a-41f9-ba5e-32f7eea28f9f" name="sendDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>dhxBinding</con:interface><con:operation>sendDocument</con:operation><con:request name="sendDocument" id="8c69dc96-bceb-4568-aec0-103f223d1bdd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#dhxEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xro="http://x-road.eu/xsd/xroad.xsd" xmlns:iden="http://x-road.eu/xsd/identifiers" xmlns:prod="http://dhx.x-road.eu/producer">
   <soapenv:Header>
       <ns4:protocolVersion xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">4.0</ns4:protocolVersion>
    <ns4:id xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers"
      xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">64a3ddbd-1620-42c4-b2fe-60b854c2f32f
    </ns4:id>
    <ns4:client xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dhs2MemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dhs2MemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dhs2Subsystem}</ns3:subsystemCode>
    </ns4:client>
    <ns4:service xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/"
      ns3:objectType="SERVICE">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dvkMemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dvkMemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dvkDhxSubsystem}</ns3:subsystemCode>
      <ns3:serviceCode>sendDocument</ns3:serviceCode>
      <ns3:serviceVersion>v1</ns3:serviceVersion>
    </ns4:service>
   </soapenv:Header>
   <soapenv:Body>
      <prod:sendDocument>
         <!--Optional:-->
          <prod:DHXVersion>1.0</prod:DHXVersion>
         <prod:documentAttachment>cid:doc</prod:documentAttachment>
           <prod:recipient>${#Project#dhs3MemberCode}</prod:recipient>
           <prod:recipientSystem>${#Project#dhs3Subsystem2}</prod:recipientSystem>
         <prod:consignmentId>${=java.util.UUID.randomUUID()}</prod:consignmentId>
      </prod:sendDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="2b15a208-994a-445e-beec-adba493be048" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d9c51142-4686-4a66-a24c-d0ee72472f9f" name="Contains receiptId"><con:configuration><token>receiptId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="30b27822-a222-4a2b-bc64-f2e1492481a7" name="Not Contains fault"><con:configuration><token>fault</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>binaryContent7431235772628261600.tmp</con:name><con:contentType>application/octet-stream</con:contentType><con:contentId>doc</con:contentId><con:url>../../BPW~1.BPW/AppData/Local/Temp/binaryContent7431235772628261600.tmp</con:url><con:id>1c366933-863a-48c2-9807-464e28a55705</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://dhx.x-road.eu/producer/dhxPortType/sendDocumentRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="DHX receipt id to property" id="c4536509-1749-48df-8ba7-52a045e20d1b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>DHX receipt ID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>sendDocument</con:sourceStep><con:sourcePath>declare namespace ns3='http://dhx.x-road.eu/producer'; 
//ns3:sendDocumentResponse[1]/ns3:receiptId[1]</con:sourcePath><con:targetType>dhxReceiptId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>dhxReceiptId</con:name><con:value>14211</con:value></con:property></con:properties></con:testCase><con:testCase id="2ac6121c-a0a9-4370-8fd6-4f042a57f6dd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="1.3. Vale kapsli saatmine" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Attach file from filesystem" id="be9c6db0-04cd-4161-98e9-7251ed502e29"><con:settings/><con:config><script><![CDATA[import groovy.xml.MarkupBuilder
import org.custommonkey.xmlunit.*
import java.util.Random  
import java.security.MessageDigest
import java.nio.file.*


    def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
    def projectPath = groovyUtils.projectPath
    log.info projectPath

    def project = testRunner.testCase.testSuite.project
        log.info "Project: " + project.name
        def myTestSuite = testRunner.testCase.testSuite;
        log.info "TestSuite: " + myTestSuite.name

    def testCase = testRunner.testCase
    log.info "TestCase: " + testCase.name

    def testStepUploadDataAfterCheck = testCase.getTestStepByName("sendDocument")
    def request= testStepUploadDataAfterCheck.testRequest
    log.info "TestStep: " + testStepUploadDataAfterCheck.name


    // clear existing attachments
    for( a in request.attachments ) {
        request.removeAttachment( a )
    }

    //FileNamePath
    def fileNamePath = testRunner.testCase.testSuite.project.getPropertyValue( "badCapsule" )
    //FileName
   // def fileName = testCase.getTestStepAt(testRunner.testCase.getTestStepIndexByName("FileNameProperties")).getProperty("FileName")

    // get file to attach
    log.info "file to attach: " + fileNamePath
    def file = new File(fileNamePath )
    if ( file == null) {
        log.error "bad filename"
    }   
    else 
    {
     	FileInputStream attFile = null;
     ByteArrayOutputStream bos = null;
    	try{
	        // attach and set properties
	       def senderMemberCode = testRunner.testCase.testSuite.project.getPropertyValue( "dhs2MemberCode" )
	       def recipientMemberCode =  testRunner.testCase.testSuite.project.getPropertyValue( "dhs3MemberCode" )
	       attFile = new FileInputStream(fileNamePath)
	       def attStr = attFile.text;
	      attStr = attStr.replaceAll( /(?ms)(<DecSender>.*?<OrganisationCode>.*?<\/OrganisationCode>)/, '<DecSender><OrganisationCode>'+ senderMemberCode + '</OrganisationCode>')
	      attStr = attStr.replaceAll( /(?ms)(<DecRecipient>.*?<OrganisationCode>.*?<\/OrganisationCode>)/, '<DecRecipient><OrganisationCode>'+ recipientMemberCode + '</OrganisationCode>')
	       bos = new ByteArrayOutputStream();
	       bos.write(attStr.getBytes("UTF-8"))
	       def attachment = request.attachBinaryData(bos.toByteArray(), 'application/octet-stream' )
	        //def attachment = request.attachFile( file, true )
	       // attachment.contentType = "application/octet-stream"
	        attachment.setContentID("doc")
    	}  catch(Exception ex) {
  	log.error(ex.getMessage(), ex);
  	} finally  {
  	  	if(attFile != null) {
  	  		attFile.close();
  	  	}
  	  	if(bos != null) {
  	  		bos.close();
  	  	}
  	}
        log.info "file attached succesfully"
    }]]></script></con:config></con:testStep><con:testStep type="request" id="8a3dfa4d-a1c4-4861-98e6-f436d741f6ff" name="sendDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>dhxBinding</con:interface><con:operation>sendDocument</con:operation><con:request name="sendDocument" id="8c69dc96-bceb-4568-aec0-103f223d1bdd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#dhxEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xro="http://x-road.eu/xsd/xroad.xsd" xmlns:iden="http://x-road.eu/xsd/identifiers" xmlns:prod="http://dhx.x-road.eu/producer">
   <soapenv:Header>
       <ns4:protocolVersion xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">4.0</ns4:protocolVersion>
    <ns4:id xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers"
      xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">64a3ddbd-1620-42c4-b2fe-60b854c2f32f
    </ns4:id>
    <ns4:client xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dhs2MemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dhs2MemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dhs2Subsystem}</ns3:subsystemCode>
    </ns4:client>
    <ns4:service xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/"
      ns3:objectType="SERVICE">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dvkMemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dvkMemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dvkDhxSubsystem}</ns3:subsystemCode>
      <ns3:serviceCode>sendDocument</ns3:serviceCode>
      <ns3:serviceVersion>v1</ns3:serviceVersion>
    </ns4:service>
   </soapenv:Header>
   <soapenv:Body>
      <prod:sendDocument>
         <!--Optional:-->
          <prod:DHXVersion>1.0</prod:DHXVersion>
         <prod:documentAttachment>cid:doc</prod:documentAttachment>
           <prod:recipient>${#Project#dhs3MemberCode}</prod:recipient>
         <prod:consignmentId>${=java.util.UUID.randomUUID()}</prod:consignmentId>
      </prod:sendDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="2b15a208-994a-445e-beec-adba493be048" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d9c51142-4686-4a66-a24c-d0ee72472f9f" name="Contains fault"><con:configuration><token>fault</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0608413a-c3c4-4ab5-975b-ee2623910776"><con:configuration/></con:assertion><con:assertion type="SOAP Response" id="a98e26e4-4689-4363-aef6-28b778608731" name="SOAP Response"/><con:assertion type="Simple Contains" id="671764cb-3f9f-4cbc-964a-f2fe85aa4cfd" name="Contains DHX.VAlidation Error"><con:configuration><token>DHX.Validation</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>binaryContent1426479310246812878.tmp</con:name><con:contentType>application/octet-stream</con:contentType><con:contentId>doc</con:contentId><con:url>../../BPW~1.BPW/AppData/Local/Temp/binaryContent1426479310246812878.tmp</con:url><con:id>e121c417-a4c7-47ae-a1b4-cf2990f03e98</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://dhx.x-road.eu/producer/dhxPortType/sendDocumentRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c45be6af-33f2-48fc-bba8-5ef3dbb2a303" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="1.4. Faili saatmine (fail ei ole kapsel)" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Attach file from filesystem" id="e14763e6-0688-49e9-97c8-9e49063405c6"><con:settings/><con:config><script><![CDATA[import groovy.xml.MarkupBuilder
import org.custommonkey.xmlunit.*
import java.util.Random  
import java.security.MessageDigest
import java.nio.file.*


    def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
    def projectPath = groovyUtils.projectPath
    log.info projectPath

    def project = testRunner.testCase.testSuite.project
        log.info "Project: " + project.name
        def myTestSuite = testRunner.testCase.testSuite;
        log.info "TestSuite: " + myTestSuite.name

    def testCase = testRunner.testCase
    log.info "TestCase: " + testCase.name

    def testStepUploadDataAfterCheck = testCase.getTestStepByName("sendDocument")
    def request= testStepUploadDataAfterCheck.testRequest
    log.info "TestStep: " + testStepUploadDataAfterCheck.name


    // clear existing attachments
    for( a in request.attachments ) {
        request.removeAttachment( a )
    }

    //FileNamePath
    def fileNamePath = testRunner.testCase.testSuite.project.getPropertyValue( "notCapsule" )
    //FileName
   // def fileName = testCase.getTestStepAt(testRunner.testCase.getTestStepIndexByName("FileNameProperties")).getProperty("FileName")

    // get file to attach
    log.info "file to attach: " + fileNamePath
    def file = new File(fileNamePath )
    if ( file == null) {
        log.error "bad filename"
    }   
    else 
    {
      	FileInputStream attFile = null;
     ByteArrayOutputStream bos = null;
    	try{
	        // attach and set properties
	       def senderMemberCode = testRunner.testCase.testSuite.project.getPropertyValue( "dhs2MemberCode" )
	       def recipientMemberCode =  testRunner.testCase.testSuite.project.getPropertyValue( "dhs3MemberCode" )
	       attFile = new FileInputStream(fileNamePath)
	       def attStr = attFile.text;
	      attStr = attStr.replaceAll( /(?ms)(<DecSender>.*?<OrganisationCode>.*?<\/OrganisationCode>)/, '<DecSender><OrganisationCode>'+ senderMemberCode + '</OrganisationCode>')
	      attStr = attStr.replaceAll( /(?ms)(<DecRecipient>.*?<OrganisationCode>.*?<\/OrganisationCode>)/, '<DecRecipient><OrganisationCode>'+ recipientMemberCode + '</OrganisationCode>')
	       bos = new ByteArrayOutputStream();
	      bos.write(attStr.getBytes("UTF-8"))
	       def attachment = request.attachBinaryData(bos.toByteArray(), 'application/octet-stream' )
	        //def attachment = request.attachFile( file, true )
	       // attachment.contentType = "application/octet-stream"
	        attachment.setContentID("doc")
    	}  catch(Exception ex) {
  	log.error(ex.getMessage(), ex);
  	} finally  {
  	  	if(attFile != null) {
  	  		attFile.close();
  	  	}
  	  	if(bos != null) {
  	  		bos.close();
  	  	}
  	}
        log.info "file attached succesfully"
    }]]></script></con:config></con:testStep><con:testStep type="request" id="7a712d57-3b7d-4ad1-bca9-f9f61bed2bcb" name="sendDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>dhxBinding</con:interface><con:operation>sendDocument</con:operation><con:request name="sendDocument" id="8c69dc96-bceb-4568-aec0-103f223d1bdd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#dhxEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xro="http://x-road.eu/xsd/xroad.xsd" xmlns:iden="http://x-road.eu/xsd/identifiers" xmlns:prod="http://dhx.x-road.eu/producer">
   <soapenv:Header>
       <ns4:protocolVersion xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">4.0</ns4:protocolVersion>
    <ns4:id xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers"
      xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">64a3ddbd-1620-42c4-b2fe-60b854c2f32f
    </ns4:id>
    <ns4:client xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dhs2MemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dhs2MemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dhs2Subsystem}</ns3:subsystemCode>
    </ns4:client>
    <ns4:service xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/"
      ns3:objectType="SERVICE">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dvkMemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dvkMemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dvkDhxSubsystem}</ns3:subsystemCode>
      <ns3:serviceCode>sendDocument</ns3:serviceCode>
      <ns3:serviceVersion>v1</ns3:serviceVersion>
    </ns4:service>
   </soapenv:Header>
   <soapenv:Body>
      <prod:sendDocument>
         <!--Optional:-->
          <prod:DHXVersion>1.0</prod:DHXVersion>
         <prod:documentAttachment>cid:doc</prod:documentAttachment>
           <prod:recipient>${#Project#dhs3MemberCode}</prod:recipient>
         <prod:consignmentId>${=java.util.UUID.randomUUID()}</prod:consignmentId>
      </prod:sendDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="2b15a208-994a-445e-beec-adba493be048" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d9c51142-4686-4a66-a24c-d0ee72472f9f" name="Contains fault"><con:configuration><token>fault</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0608413a-c3c4-4ab5-975b-ee2623910776"><con:configuration/></con:assertion><con:assertion type="SOAP Response" id="a98e26e4-4689-4363-aef6-28b778608731" name="SOAP Response"/><con:assertion type="Simple Contains" id="671764cb-3f9f-4cbc-964a-f2fe85aa4cfd" name="Contains DHX.VAlidation Error"><con:configuration><token>DHX.Validation</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>binaryContent4865244074400873710.tmp</con:name><con:contentType>application/octet-stream</con:contentType><con:contentId>doc</con:contentId><con:url>../../BPW~1.BPW/AppData/Local/Temp/binaryContent4865244074400873710.tmp</con:url><con:id>d78b0523-98a3-43a0-a01a-87a3678e75e7</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://dhx.x-road.eu/producer/dhxPortType/sendDocumentRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="44ae971a-4ea7-49d7-9109-f7c43b995ed0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="1.5. Duplikaadi kontroll" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Attach file from filesystem" id="06b797d9-4a9e-4180-8498-be2740b40e3d"><con:settings/><con:config><script><![CDATA[import groovy.xml.MarkupBuilder
import org.custommonkey.xmlunit.*
import java.util.Random  
import java.security.MessageDigest
import java.nio.file.*


    def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
    def projectPath = groovyUtils.projectPath
    log.info projectPath

    def project = testRunner.testCase.testSuite.project
        log.info "Project: " + project.name
        def myTestSuite = testRunner.testCase.testSuite;
        log.info "TestSuite: " + myTestSuite.name

    def testCase = testRunner.testCase
    log.info "TestCase: " + testCase.name

    def testStepUploadDataAfterCheck = testCase.getTestStepByName("sendDocument 1")
    def request= testStepUploadDataAfterCheck.testRequest
    log.info "TestStep: " + testStepUploadDataAfterCheck.name


    // clear existing attachments
    for( a in request.attachments ) {
        request.removeAttachment( a )
    }

    //FileNamePath
    def fileNamePath = testRunner.testCase.testSuite.project.getPropertyValue( "goodCapsule" )
    testRunner.testCase.setPropertyValue( "consignmentId",  java.util.UUID.randomUUID().toString() )
    //FileName
   // def fileName = testCase.getTestStepAt(testRunner.testCase.getTestStepIndexByName("FileNameProperties")).getProperty("FileName")

    // get file to attach
    log.info "file to attach: " + fileNamePath
    def file = new File(fileNamePath )
    if ( file == null) {
        log.error "bad filename"
    }   
    else 
    {
      	FileInputStream attFile = null;
     ByteArrayOutputStream bos = null;
    	try{
	        // attach and set properties
	       def senderMemberCode = testRunner.testCase.testSuite.project.getPropertyValue( "dhs2MemberCode" )
	       def recipientMemberCode =  testRunner.testCase.testSuite.project.getPropertyValue( "dhs3MemberCode" )
	       attFile = new FileInputStream(fileNamePath)
	       def attStr = attFile.text;
	      attStr = attStr.replaceAll( /(?ms)(<DecSender>.*?<OrganisationCode>.*?<\/OrganisationCode>)/, '<DecSender><OrganisationCode>'+ senderMemberCode + '</OrganisationCode>')
	      attStr = attStr.replaceAll( /(?ms)(<DecRecipient>.*?<OrganisationCode>.*?<\/OrganisationCode>)/, '<DecRecipient><OrganisationCode>'+ recipientMemberCode + '</OrganisationCode>')
	       bos = new ByteArrayOutputStream();
	        bos.write(attStr.getBytes("UTF-8"))
	       def attachment = request.attachBinaryData(bos.toByteArray(), 'application/octet-stream' )
	        //def attachment = request.attachFile( file, true )
	       // attachment.contentType = "application/octet-stream"
	        attachment.setContentID("doc")
    	}  catch(Exception ex) {
  	log.error(ex.getMessage(), ex);
  	} finally  {
  	  	if(attFile != null) {
  	  		attFile.close();
  	  	}
  	  	if(bos != null) {
  	  		bos.close();
  	  	}
  	}
        log.info "file attached succesfully"
    }]]></script></con:config></con:testStep><con:testStep type="request" id="d23b73f6-7142-4e9c-9138-2733aa293153" name="sendDocument 1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>dhxBinding</con:interface><con:operation>sendDocument</con:operation><con:request name="sendDocument 1" id="8c69dc96-bceb-4568-aec0-103f223d1bdd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#dhxEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xro="http://x-road.eu/xsd/xroad.xsd" xmlns:iden="http://x-road.eu/xsd/identifiers" xmlns:prod="http://dhx.x-road.eu/producer">
   <soapenv:Header>
       <ns4:protocolVersion xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">4.0</ns4:protocolVersion>
    <ns4:id xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers"
      xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">64a3ddbd-1620-42c4-b2fe-60b854c2f32f
    </ns4:id>
    <ns4:client xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dhs2MemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dhs2MemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dhs2Subsystem}</ns3:subsystemCode>
    </ns4:client>
    <ns4:service xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/"
      ns3:objectType="SERVICE">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dvkMemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dvkMemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dvkDhxSubsystem}</ns3:subsystemCode>
      <ns3:serviceCode>sendDocument</ns3:serviceCode>
      <ns3:serviceVersion>v1</ns3:serviceVersion>
    </ns4:service>
   </soapenv:Header>
   <soapenv:Body>
      <prod:sendDocument>
         <!--Optional:-->
          <prod:DHXVersion>1.0</prod:DHXVersion>
         <prod:documentAttachment>cid:doc</prod:documentAttachment>
           <prod:recipient>${#Project#dhs3MemberCode}</prod:recipient>
         <prod:consignmentId>${#TestCase#consignmentId}</prod:consignmentId>
      </prod:sendDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>binaryContent8196914065164851600.tmp</con:name><con:contentType>application/octet-stream</con:contentType><con:contentId>doc</con:contentId><con:url>../../BPW~1.BPW/AppData/Local/Temp/binaryContent8196914065164851600.tmp</con:url><con:id>ed1edf26-0cbd-4192-b9a6-846bb7e2a448</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://dhx.x-road.eu/producer/dhxPortType/sendDocumentRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Attach file from filesystem 2" id="c60f130b-73d9-436a-a583-a4bf82822dff"><con:settings/><con:config><script><![CDATA[import groovy.xml.MarkupBuilder
import org.custommonkey.xmlunit.*
import java.util.Random  
import java.security.MessageDigest
import java.nio.file.*


    def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
    def projectPath = groovyUtils.projectPath
    log.info projectPath

    def project = testRunner.testCase.testSuite.project
        log.info "Project: " + project.name
        def myTestSuite = testRunner.testCase.testSuite;
        log.info "TestSuite: " + myTestSuite.name

    def testCase = testRunner.testCase
    log.info "TestCase: " + testCase.name

    def testStepUploadDataAfterCheck = testCase.getTestStepByName("sendDocument duplicate")
    def request= testStepUploadDataAfterCheck.testRequest
    log.info "TestStep: " + testStepUploadDataAfterCheck.name


    // clear existing attachments
    for( a in request.attachments ) {
        request.removeAttachment( a )
    }

    //FileNamePath
    def fileNamePath = testRunner.testCase.testSuite.project.getPropertyValue( "goodCapsule" )
    //FileName
   // def fileName = testCase.getTestStepAt(testRunner.testCase.getTestStepIndexByName("FileNameProperties")).getProperty("FileName")

    // get file to attach
    log.info "file to attach: " + fileNamePath
    def file = new File(fileNamePath )
    if ( file == null) {
        log.error "bad filename"
    }   
    else 
    {
       	FileInputStream attFile = null;
     ByteArrayOutputStream bos = null;
    	try{
	        // attach and set properties
	       def senderMemberCode = testRunner.testCase.testSuite.project.getPropertyValue( "dhs2MemberCode" )
	       def recipientMemberCode =  testRunner.testCase.testSuite.project.getPropertyValue( "dhs3MemberCode" )
	       attFile = new FileInputStream(fileNamePath)
	       def attStr = attFile.text;
	      attStr = attStr.replaceAll( /(?ms)(<DecSender>.*?<OrganisationCode>.*?<\/OrganisationCode>)/, '<DecSender><OrganisationCode>'+ senderMemberCode + '</OrganisationCode>')
	      attStr = attStr.replaceAll( /(?ms)(<DecRecipient>.*?<OrganisationCode>.*?<\/OrganisationCode>)/, '<DecRecipient><OrganisationCode>'+ recipientMemberCode + '</OrganisationCode>')
	       bos = new ByteArrayOutputStream();
	        bos.write(attStr.getBytes("UTF-8"))
	       def attachment = request.attachBinaryData(bos.toByteArray(), 'application/octet-stream' )
	        //def attachment = request.attachFile( file, true )
	       // attachment.contentType = "application/octet-stream"
	        attachment.setContentID("doc")
    	}  catch(Exception ex) {
  	log.error(ex.getMessage(), ex);
  	} finally  {
  	  	if(attFile != null) {
  	  		attFile.close();
  	  	}
  	  	if(bos != null) {
  	  		bos.close();
  	  	}
  	}
        log.info "file attached succesfully"
    }]]></script></con:config></con:testStep><con:testStep type="request" id="853330d9-255f-4a36-bad0-ddb462ce3f8c" name="sendDocument duplicate"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>dhxBinding</con:interface><con:operation>sendDocument</con:operation><con:request name="sendDocument duplicate" id="8c69dc96-bceb-4568-aec0-103f223d1bdd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#dhxEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xro="http://x-road.eu/xsd/xroad.xsd" xmlns:iden="http://x-road.eu/xsd/identifiers" xmlns:prod="http://dhx.x-road.eu/producer">
   <soapenv:Header>
       <ns4:protocolVersion xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">4.0</ns4:protocolVersion>
    <ns4:id xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers"
      xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">64a3ddbd-1620-42c4-b2fe-60b854c2f32f
    </ns4:id>
    <ns4:client xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dhs2MemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dhs2MemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dhs2Subsystem}</ns3:subsystemCode>
    </ns4:client>
    <ns4:service xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/"
      ns3:objectType="SERVICE">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dvkMemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dvkMemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dvkDhxSubsystem}</ns3:subsystemCode>
      <ns3:serviceCode>sendDocument</ns3:serviceCode>
      <ns3:serviceVersion>v1</ns3:serviceVersion>
    </ns4:service>
   </soapenv:Header>
   <soapenv:Body>
      <prod:sendDocument>
         <!--Optional:-->
          <prod:DHXVersion>1.0</prod:DHXVersion>
         <prod:documentAttachment>cid:doc</prod:documentAttachment>
           <prod:recipient>${#Project#dhs3MemberCode}</prod:recipient>
         <prod:consignmentId>${#TestCase#consignmentId}</prod:consignmentId>
      </prod:sendDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="2b15a208-994a-445e-beec-adba493be048" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d9c51142-4686-4a66-a24c-d0ee72472f9f" name="Contains fault"><con:configuration><token>fault</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="SOAP Response" id="a98e26e4-4689-4363-aef6-28b778608731" name="SOAP Response"/><con:assertion type="Simple Contains" id="671764cb-3f9f-4cbc-964a-f2fe85aa4cfd" name="Contains DHX.VAlidation Error"><con:configuration><token>DHX.Duplicate</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>binaryContent3828252627010256405.tmp</con:name><con:contentType>application/octet-stream</con:contentType><con:contentId>doc</con:contentId><con:url>../../BPW~1.BPW/AppData/Local/Temp/binaryContent3828252627010256405.tmp</con:url><con:id>8a09ed4f-e444-41e6-9f84-2d25d15f7c50</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://dhx.x-road.eu/producer/dhxPortType/sendDocumentRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>consignmentId</con:name><con:value>8a7f8b8b-4801-44f4-8e8b-14f6460f521e</con:value></con:property></con:properties></con:testCase><con:testCase id="a5fd2d3b-a45f-43df-b643-5af586266f5d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="1.6. Valele adressaadile saatmine" searchProperties="true"><con:description/><con:settings/><con:testStep type="groovy" name="Attach file from filesystem" id="31b69d45-9bfa-41a3-95f4-c883b20544d2"><con:settings/><con:config><script><![CDATA[import groovy.xml.MarkupBuilder
import org.custommonkey.xmlunit.*
import java.util.Random  
import java.security.MessageDigest
import java.nio.file.*


    def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
    def projectPath = groovyUtils.projectPath
    log.info projectPath

    def project = testRunner.testCase.testSuite.project
        log.info "Project: " + project.name
        def myTestSuite = testRunner.testCase.testSuite;
        log.info "TestSuite: " + myTestSuite.name

    def testCase = testRunner.testCase
    log.info "TestCase: " + testCase.name

    def testStepUploadDataAfterCheck = testCase.getTestStepByName("sendDocument")
    def request= testStepUploadDataAfterCheck.testRequest
    log.info "TestStep: " + testStepUploadDataAfterCheck.name


    // clear existing attachments
    for( a in request.attachments ) {
        request.removeAttachment( a )
    }

    //FileNamePath
    def fileNamePath = testRunner.testCase.testSuite.project.getPropertyValue( "goodCapsule" )
    //FileName
   // def fileName = testCase.getTestStepAt(testRunner.testCase.getTestStepIndexByName("FileNameProperties")).getProperty("FileName")

    // get file to attach
    log.info "file to attach: " + fileNamePath
    def file = new File(fileNamePath )
    if ( file == null) {
        log.error "bad filename"
    }   
    else 
    {
       	FileInputStream attFile = null;
     ByteArrayOutputStream bos = null;
    	try{
	        // attach and set properties
	       def senderMemberCode = testRunner.testCase.testSuite.project.getPropertyValue( "dhs2MemberCode" )
	       def recipientMemberCode =  testRunner.testCase.testSuite.project.getPropertyValue( "dhs3MemberCode" )
	       attFile = new FileInputStream(fileNamePath)
	       def attStr = attFile.text;
	      attStr = attStr.replaceAll( /(?ms)(<DecSender>.*?<OrganisationCode>.*?<\/OrganisationCode>)/, '<DecSender><OrganisationCode>'+ senderMemberCode + '</OrganisationCode>')
	      attStr = attStr.replaceAll( /(?ms)(<DecRecipient>.*?<OrganisationCode>.*?<\/OrganisationCode>)/, '<DecRecipient><OrganisationCode>'+ recipientMemberCode + '</OrganisationCode>')
	       bos = new ByteArrayOutputStream();
	       bos.write(attStr.getBytes("UTF-8"))
	       def attachment = request.attachBinaryData(bos.toByteArray(), 'application/octet-stream' )
	        //def attachment = request.attachFile( file, true )
	       // attachment.contentType = "application/octet-stream"
	        attachment.setContentID("doc")
    	}  catch(Exception ex) {
  	log.error(ex.getMessage(), ex);
  	} finally  {
  	  	if(attFile != null) {
  	  		attFile.close();
  	  	}
  	  	if(bos != null) {
  	  		bos.close();
  	  	}
  	}
        log.info "file attached succesfully"
    }]]></script></con:config></con:testStep><con:testStep type="request" id="7ea234fd-0d70-4b22-8056-ff69bc135e4b" name="sendDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>dhxBinding</con:interface><con:operation>sendDocument</con:operation><con:request name="sendDocument" id="8c69dc96-bceb-4568-aec0-103f223d1bdd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#dhxEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xro="http://x-road.eu/xsd/xroad.xsd" xmlns:iden="http://x-road.eu/xsd/identifiers" xmlns:prod="http://dhx.x-road.eu/producer">
   <soapenv:Header>
       <ns4:protocolVersion xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">4.0</ns4:protocolVersion>
    <ns4:id xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers"
      xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">64a3ddbd-1620-42c4-b2fe-60b854c2f32f
    </ns4:id>
    <ns4:client xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dhs2MemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dhs2MemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dhs2Subsystem}</ns3:subsystemCode>
    </ns4:client>
    <ns4:service xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/"
      ns3:objectType="SERVICE">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dvkMemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dvkMemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dvkDhxSubsystem}</ns3:subsystemCode>
      <ns3:serviceCode>sendDocument</ns3:serviceCode>
      <ns3:serviceVersion>v1</ns3:serviceVersion>
    </ns4:service>
   </soapenv:Header>
   <soapenv:Body>
      <prod:sendDocument>
         <!--Optional:-->
          <prod:DHXVersion>1.0</prod:DHXVersion>
         <prod:documentAttachment>cid:doc</prod:documentAttachment>
           <prod:recipient>test</prod:recipient>
         <prod:consignmentId>${=java.util.UUID.randomUUID()}</prod:consignmentId>
      </prod:sendDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="2b15a208-994a-445e-beec-adba493be048" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d9c51142-4686-4a66-a24c-d0ee72472f9f" name="Contains fault"><con:configuration><token>fault</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="c3d32ae2-32ce-4e51-a1d3-e22809d360ab" name="Contains"><con:configuration><token>DHX.InvalidAddressee</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>binaryContent7706669180013906280.tmp</con:name><con:contentType>application/octet-stream</con:contentType><con:contentId>doc</con:contentId><con:url>../../BPW~1.BPW/AppData/Local/Temp/binaryContent7706669180013906280.tmp</con:url><con:id>c0066145-33c3-469f-8065-78b2d731ad9e</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://dhx.x-road.eu/producer/dhxPortType/sendDocumentRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e16f5ab8-690e-4051-8e1c-db83d08deb9a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="1.7. Vahendatavate nimekirja küsimine DVK-st." searchProperties="true"><con:description/><con:settings/><con:testStep type="request" name="representationList" id="538ec55a-5d4a-4913-8b78-cd8f89fd60ef"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>dhxBinding</con:interface><con:operation>representationList</con:operation><con:request name="representationList" id="04b5f05b-a187-4ba6-85bf-8601784d4133"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#dhxEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xro="http://x-road.eu/xsd/xroad.xsd" xmlns:iden="http://x-road.eu/xsd/identifiers" xmlns:prod="http://dhx.x-road.eu/producer">
   <soapenv:Header>
       <ns4:protocolVersion xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">4.0</ns4:protocolVersion>
    <ns4:id xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers"
      xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">64a3ddbd-1620-42c4-b2fe-60b854c2f32f
    </ns4:id>
         <ns4:client xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dhs2MemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dhs2MemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dhs2Subsystem}</ns3:subsystemCode>
    </ns4:client>
    <ns4:service xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/"
      ns3:objectType="SERVICE">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dvkMemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dvkMemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dvkDhxSubsystem}</ns3:subsystemCode>
      <ns3:serviceCode>representationList</ns3:serviceCode>
      <ns3:serviceVersion>v1</ns3:serviceVersion>
    </ns4:service>
   </soapenv:Header>
   <soapenv:Body>
      <prod:representationList>
      </prod:representationList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="db20a645-a5cc-40d7-a6a5-a7b131d69aa4"/><con:assertion type="Schema Compliance" id="3a1eb0b2-a656-475c-8e76-c838353ee179"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="28cca8a4-f664-41ec-a030-760d6d76865b"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="2e8ab8e6-2927-49d4-a0dd-981c93d25cf3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="1.10. Õige kapsli saatmine. Adressat toetab ainult 1.0 kapsli versiooni" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Attach file from filesystem" id="ba09b3a2-883d-4762-94de-0464da19f8ed"><con:settings/><con:config><script><![CDATA[import groovy.xml.MarkupBuilder
import org.custommonkey.xmlunit.*
import java.util.Random  
import java.security.MessageDigest
import java.nio.file.*


    def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
    def projectPath = groovyUtils.projectPath
    log.info projectPath

    def project = testRunner.testCase.testSuite.project
        log.info "Project: " + project.name
        def myTestSuite = testRunner.testCase.testSuite;
        log.info "TestSuite: " + myTestSuite.name

    def testCase = testRunner.testCase
    log.info "TestCase: " + testCase.name

    def testStepUploadDataAfterCheck = testCase.getTestStepByName("sendDocument")
    def request= testStepUploadDataAfterCheck.testRequest
    log.info "TestStep: " + testStepUploadDataAfterCheck.name


    // clear existing attachments
    for( a in request.attachments ) {
        request.removeAttachment( a )
    }

    //FileNamePath
    def fileNamePath = testRunner.testCase.testSuite.project.getPropertyValue( "goodCapsule" )
    //FileName
   // def fileName = testCase.getTestStepAt(testRunner.testCase.getTestStepIndexByName("FileNameProperties")).getProperty("FileName")

    // get file to attach
    log.info "file to attach: " + fileNamePath
    def file = new File(fileNamePath )
    if ( file == null) {
        log.error "bad filename"
    }   
    else 
    {
    	FileInputStream attFile = null;
     ByteArrayOutputStream bos = null;
    	try{
	        // attach and set properties
	       def senderMemberCode = testRunner.testCase.testSuite.project.getPropertyValue( "dhs2MemberCode" )
	       def recipientMemberCode =  testRunner.testCase.testSuite.project.getPropertyValue( "dhs4MemberCode" )
	       attFile = new FileInputStream(fileNamePath)
	       def attStr = attFile.text;
	      attStr = attStr.replaceAll( /(?ms)(<DecSender>.*?<OrganisationCode>.*?<\/OrganisationCode>)/, '<DecSender><OrganisationCode>'+ senderMemberCode + '</OrganisationCode>')
	      attStr = attStr.replaceAll( /(?ms)(<DecRecipient>.*?<OrganisationCode>.*?<\/OrganisationCode>)/, '<DecRecipient><OrganisationCode>'+ recipientMemberCode + '</OrganisationCode>')
	      log.info(attStr)
	       bos = new ByteArrayOutputStream();
	       bos.write(attStr.getBytes("UTF-8"))
	       def attachment = request.attachBinaryData(bos.toByteArray(), 'text/plain' )
	        //def attachment = request.attachFile( file, true )
	       // attachment.contentType = "application/octet-stream"
	        attachment.setContentID("doc")
    	}  catch(Exception ex) {
  	log.error(ex.getMessage(), ex);
  	} finally  {
  	  	if(attFile != null) {
  	  		attFile.close();
  	  	}
  	  	if(bos != null) {
  	  		bos.close();
  	  	}
  	}
    	
       // def holder2 = groovyUtils.getXmlHolder( "sendDocument#Request" ) // Get Request body
      //  holder2.setNodeValue( "//upl:UploadDataAfterCheckRequest/uploadedData","cid:"+fileName.getValue()); //Set "link" to attachment in request body
      //  holder2.updateProperty() //and update
        log.info "file attached succesfully"
    }]]></script></con:config></con:testStep><con:testStep type="request" id="08c719a0-7ebe-4da0-adaf-100556bc9ee8" name="sendDocument"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>dhxBinding</con:interface><con:operation>sendDocument</con:operation><con:request name="sendDocument" id="8c69dc96-bceb-4568-aec0-103f223d1bdd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#dhxEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xro="http://x-road.eu/xsd/xroad.xsd" xmlns:iden="http://x-road.eu/xsd/identifiers" xmlns:prod="http://dhx.x-road.eu/producer">
   <soapenv:Header>
       <ns4:protocolVersion xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">4.0</ns4:protocolVersion>
    <ns4:id xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers"
      xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">64a3ddbd-1620-42c4-b2fe-60b854c2f32f
    </ns4:id>
    <ns4:client xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dhs2MemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dhs2MemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dhs2Subsystem}</ns3:subsystemCode>
    </ns4:client>
    <ns4:service xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/"
      ns3:objectType="SERVICE">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dvkMemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dvkMemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dvkDhxSubsystem}</ns3:subsystemCode>
      <ns3:serviceCode>sendDocument</ns3:serviceCode>
      <ns3:serviceVersion>v1</ns3:serviceVersion>
    </ns4:service>
   </soapenv:Header>
   <soapenv:Body>
      <prod:sendDocument>
         <!--Optional:-->
          <prod:DHXVersion>1.0</prod:DHXVersion>
         <prod:documentAttachment>cid:doc</prod:documentAttachment>
           <prod:recipient>${#Project#dhs4MemberCode}</prod:recipient>
         <prod:consignmentId>${=java.util.UUID.randomUUID()}</prod:consignmentId>
      </prod:sendDocument>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="2b15a208-994a-445e-beec-adba493be048" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d9c51142-4686-4a66-a24c-d0ee72472f9f" name="Contains receiptId"><con:configuration><token>receiptId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="30b27822-a222-4a2b-bc64-f2e1492481a7" name="Not Contains fault"><con:configuration><token>fault</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="773d8538-911d-4748-a4b5-5358ff3b5460" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>binaryContent7560179295880294442.tmp</con:name><con:contentType>text/plain</con:contentType><con:contentId>doc</con:contentId><con:url>../../BPW~1.BPW/AppData/Local/Temp/binaryContent7560179295880294442.tmp</con:url><con:id>a266b101-bf84-44d3-b4c8-558556462d97</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://dhx.x-road.eu/producer/dhxPortType/sendDocumentRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="DHX receipt id to property" id="535e9ea4-c1da-46d3-9857-7c27d7a77549"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>DHX receipt ID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>sendDocument</con:sourceStep><con:sourcePath>declare namespace ns3='http://dhx.x-road.eu/producer'; 
//ns3:sendDocumentResponse[1]/ns3:receiptId[1]</con:sourcePath><con:targetType>dhxReceiptId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>dhxReceiptId</con:name><con:value>14213</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="f0c86d49-d1fd-4a64-8f2f-2b7099ea94c8" name="DVK tests"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="63be369f-26a7-469c-b4ab-ec825294cac7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="2.1. Õige kapsli saatmine" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Attach file and base64Gzip" id="8e25c781-82f0-4f64-8d84-a246b8473716"><con:settings/><con:config><script><![CDATA[import groovy.xml.MarkupBuilder
import org.custommonkey.xmlunit.*
import java.util.Random  
import java.security.MessageDigest
import java.nio.file.*


    def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
    def projectPath = groovyUtils.projectPath
    log.info projectPath

    def project = testRunner.testCase.testSuite.project
        log.info "Project: " + project.name
        def myTestSuite = testRunner.testCase.testSuite;
        log.info "TestSuite: " + myTestSuite.name

    def testCase = testRunner.testCase
    log.info "TestCase: " + testCase.name

    def testStepUploadDataAfterCheck = testCase.getTestStepByName("sendDocuments")
    def request= testStepUploadDataAfterCheck.testRequest
    log.info "TestStep: " + testStepUploadDataAfterCheck.name

    // clear existing attachments
    for( a in request.attachments ) {
        request.removeAttachment( a )
    }

//-----------read and bse64 gzip file-------------------
//no buffering is done, streams are read directly info strings, because its tests
FileInputStream attFile = null;
ByteArrayOutputStream bos = null;
 java.util.zip.GZIPOutputStream gos = null;
  try {
    def fileNamePath = testRunner.testCase.testSuite.project.getPropertyValue( "goodCapsule" )
    def senderMemberCode = testRunner.testCase.testSuite.project.getPropertyValue( "dhs3MemberCode" )
       def recipientMemberCode =  testRunner.testCase.testSuite.project.getPropertyValue( "dhs2MemberCode" )
     log.info "file to attach: " + fileNamePath
    attFile = new FileInputStream(fileNamePath)
    def attStr = attFile.text;
   attStr = attStr.replaceAll( /(?ms)(<.*?DecSender>.*?<.*?OrganisationCode>).*?(<\/.*?OrganisationCode>)/, '$1'+ senderMemberCode + '$2')
   attStr = attStr.replaceAll( /(?ms)(<.*?DecRecipient>.*?<.*?OrganisationCode>).*?(<\/.*?OrganisationCode>)/, '$1'+ recipientMemberCode + '$2')
 //   attStr = attStr.replaceAll( /(?ms)(<.*?:DecRecipient>.*?<.*?:OrganisationCode>.*?<\/.*?:OrganisationCode>)/, '<DecRecipient><OrganisationCode>'+ recipientMemberCode + '</OrganisationCode>')
     log.info "file to attach: " + attStr
    bos = new ByteArrayOutputStream();
     //OutputStream base64EncoderStream = javax.mail.internet.MimeUtility.encode(bos, "base64");
     gos = new java.util.zip.GZIPOutputStream( bos);
     gos.write(attStr.getBytes())
      gos.finish();
     //bos.write(attStr.getBytes())
     def attachment = request.attachBinaryData(bos.toByteArray().encodeBase64().toString().getBytes("UTF-8"), 'application/octet-stream' )
     attachment.setContentID("doc")
     log.info "file attached succesfully"
    } catch(Exception ex) {
  	log.error(ex.getMessage(), ex);
  	} finally  {
  	  	if(attFile != null) {
  	  		attFile.close();
  	  	}
  	  	if(gos != null) {
  	  		gos.close();
  	  	}
  	  	if(bos != null) {
  	  		bos.close();
  	  	}
  	}
 //----------- end ead and bse64 gzip file-------------------
]]></script></con:config></con:testStep><con:testStep type="request" id="120a2349-ca46-4635-b95f-3961ee69d011" name="sendDocuments"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>dhlHttpSoapPortSoapBinding</con:interface><con:operation>sendDocuments</con:operation><con:request name="sendDocuments" id="7d8c9a0c-ba23-4e1c-9577-66fcd09a83bd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#dvkEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xtee="http://x-tee.riik.ee/xsd/xtee.xsd" xmlns:dhl="http://producers.dhl.xtee.riik.ee/producer/dhl">
    <soapenv:Header>
       <ns4:protocolVersion xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">4.0</ns4:protocolVersion>
    <ns4:id xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers"
      xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">64a3ddbd-1620-42c4-b2fe-60b854c2f32f
    </ns4:id>
         <ns4:client xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dhs3MemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dhs3MemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dhs3Subsystem}</ns3:subsystemCode>
    </ns4:client>
        <ns4:service xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/"
      ns3:objectType="SERVICE">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dvkMemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dvkMemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dvkSubsystem}</ns3:subsystemCode>
      <ns3:serviceCode>sendDocuments</ns3:serviceCode>
      <ns3:serviceVersion>v4</ns3:serviceVersion>
    </ns4:service>
   </soapenv:Header>
   <soapenv:Body>
      <dhl:sendDocuments>
         <keha>
            <dokumendid href="cid:doc"></dokumendid>
            <kaust>/</kaust>
         </keha>
      </dhl:sendDocuments>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="579f87ca-a3af-4363-9576-52d329ef8ba5" name="SOAP Response"/><con:assertion type="Valid HTTP Status Codes" id="a68e0f8d-74c9-4af4-a2bc-db063f86793d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="c79c1df8-73d0-49c7-9c92-48f7a34a8193" name="Not Contains fault"><con:configuration><token>fault</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="6fbfd308-2c62-4656-b25f-98af4b0e938b" name="Contains href"><con:configuration><token>href="cid:</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>binaryContent7346900445461137376.tmp</con:name><con:contentType>application/octet-stream</con:contentType><con:contentId>doc</con:contentId><con:url>../../BPW~1.BPW/AppData/Local/Temp/binaryContent7346900445461137376.tmp</con:url><con:id>5dca99fb-5f3f-4555-868c-3e3e387a9900</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/sendDocumentsRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Check attachment" id="9984aa12-5c68-4763-881a-8bd7bacb9d8b"><con:settings/><con:config><script>log.info " Attachment Name: " + testRunner.testCase.getTestStepByName( "sendDocuments").testStep.testRequest.response.attachments[0].getName();
log.info " Attachment ContentType: " + testRunner.testCase.getTestStepByName( "sendDocuments").testStep.testRequest.response.attachments[0].getContentType();
def attachment_stream = testRunner.testCase.getTestStepByName( "sendDocuments").testStep.testRequest.response.attachments[0].getInputStream();
 InputStream base64DecoderStream = null;
 base64DecoderStream = javax.mail.internet.MimeUtility.decode(attachment_stream, "base64");
 java.util.zip.GZIPInputStream gis = new java.util.zip.GZIPInputStream(base64DecoderStream);
 def xml = gis.text;
 log.info xml
assert xml.contains('dhl_id');
String dhl_id = xml.substring(xml.indexOf('&lt;dhl_id>')+8,  xml.indexOf('&lt;/dhl_id>'));
log.info dhl_id
def tt = testRunner.testCase.setPropertyValue( "dhl_id", dhl_id )</script></con:config></con:testStep><con:properties><con:property><con:name>dhl_id</con:name><con:value>14214</con:value></con:property></con:properties></con:testCase><con:testCase id="641b8b79-3e72-4357-a72c-1a3da768dce2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="2.2. Vale kapsli saatmine" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Attach file from filesystem" id="c93cba5d-fab6-479a-b7a7-819b0aaca7d2"><con:settings/><con:config><script>import groovy.xml.MarkupBuilder
import org.custommonkey.xmlunit.*
import java.util.Random  
import java.security.MessageDigest
import java.nio.file.*


    def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
    def projectPath = groovyUtils.projectPath
    log.info projectPath

    def project = testRunner.testCase.testSuite.project
        log.info "Project: " + project.name
        def myTestSuite = testRunner.testCase.testSuite;
        log.info "TestSuite: " + myTestSuite.name

    def testCase = testRunner.testCase
    log.info "TestCase: " + testCase.name

    def testStepUploadDataAfterCheck = testCase.getTestStepByName("sendDocuments")
    def request= testStepUploadDataAfterCheck.testRequest
    log.info "TestStep: " + testStepUploadDataAfterCheck.name


    // clear existing attachments
    for( a in request.attachments ) {
        request.removeAttachment( a )
    }

    //FileNamePath
    def fileNamePath = testRunner.testCase.testSuite.project.getPropertyValue( "badCapsule" )
    //FileName
   // def fileName = testCase.getTestStepAt(testRunner.testCase.getTestStepIndexByName("FileNameProperties")).getProperty("FileName")

    // get file to attach
    log.info "file to attach: " + fileNamePath
    def file = new File(fileNamePath )
    if ( file == null) {
        log.error "bad filename"
    }   
    else 
    {
        // attach and set properties
        def attachment = request.attachFile( file, true )
        attachment.contentType = "application/octet-stream"
        attachment.setContentID("doc")

       // def holder2 = groovyUtils.getXmlHolder( "sendDocument#Request" ) // Get Request body
      //  holder2.setNodeValue( "//upl:UploadDataAfterCheckRequest/uploadedData","cid:"+fileName.getValue()); //Set "link" to attachment in request body
      //  holder2.updateProperty() //and update
        log.info "file attached succesfully"
    }</script></con:config></con:testStep><con:testStep type="request" id="9a940d38-455a-4ebc-bece-c5468608f2fa" name="sendDocuments"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>dhlHttpSoapPortSoapBinding</con:interface><con:operation>sendDocuments</con:operation><con:request name="sendDocuments" id="7d8c9a0c-ba23-4e1c-9577-66fcd09a83bd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#dvkEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xtee="http://x-tee.riik.ee/xsd/xtee.xsd" xmlns:dhl="http://producers.dhl.xtee.riik.ee/producer/dhl">
    <soapenv:Header>
       <ns4:protocolVersion xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">4.0</ns4:protocolVersion>
    <ns4:id xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers"
      xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">64a3ddbd-1620-42c4-b2fe-60b854c2f32f
    </ns4:id>
         <ns4:client xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dhs3MemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dhs3MemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dhs3Subsystem}</ns3:subsystemCode>
    </ns4:client>
        <ns4:service xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/"
      ns3:objectType="SERVICE">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dvkMemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dvkMemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dvkSubsystem}</ns3:subsystemCode>
      <ns3:serviceCode>sendDocuments</ns3:serviceCode>
      <ns3:serviceVersion>v4</ns3:serviceVersion>
    </ns4:service>
   </soapenv:Header>
   <soapenv:Body>
      <dhl:sendDocuments>
         <keha>
            <dokumendid href="cid:doc"></dokumendid>
         </keha>
      </dhl:sendDocuments>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="579f87ca-a3af-4363-9576-52d329ef8ba5" name="SOAP Response"/><con:assertion type="Simple Contains" id="9c245752-7856-4eef-bfe8-dec113e9bf61" name="Contains fault"><con:configuration><token>fault</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="68a41e6d-6543-44fa-abdb-f767821532aa" name="Not Contains keha"><con:configuration><token>keha</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>kapsel_21invalid.xml</con:name><con:contentType>application/octet-stream</con:contentType><con:size>11827</con:size><con:contentId>doc</con:contentId><con:url>../git/dhx-etalon/src/main/resources/conf/etalon1/client/kapsel_21invalid.xml</con:url><con:data></con:data><con:id>bbda11b9-dcc0-426d-99ac-7c14cae55137</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/sendDocumentsRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b114922c-3e40-4f66-80f9-c307233f1488" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="2.3. Faili saatmine (fail ei ole kapsel)" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Attach file from filesystem" id="2196ea42-03b2-4ab5-90c5-9f844fd77d9d"><con:settings/><con:config><script>import groovy.xml.MarkupBuilder
import org.custommonkey.xmlunit.*
import java.util.Random  
import java.security.MessageDigest
import java.nio.file.*


    def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
    def projectPath = groovyUtils.projectPath
    log.info projectPath

    def project = testRunner.testCase.testSuite.project
        log.info "Project: " + project.name
        def myTestSuite = testRunner.testCase.testSuite;
        log.info "TestSuite: " + myTestSuite.name

    def testCase = testRunner.testCase
    log.info "TestCase: " + testCase.name

    def testStepUploadDataAfterCheck = testCase.getTestStepByName("sendDocuments")
    def request= testStepUploadDataAfterCheck.testRequest
    log.info "TestStep: " + testStepUploadDataAfterCheck.name


    // clear existing attachments
    for( a in request.attachments ) {
        request.removeAttachment( a )
    }

    //FileNamePath
    def fileNamePath = testRunner.testCase.testSuite.project.getPropertyValue( "badCapsule" )
    //FileName
   // def fileName = testCase.getTestStepAt(testRunner.testCase.getTestStepIndexByName("FileNameProperties")).getProperty("FileName")

    // get file to attach
    log.info "file to attach: " + fileNamePath
    def file = new File(fileNamePath )
    if ( file == null) {
        log.error "bad filename"
    }   
    else 
    {
        // attach and set properties
        def attachment = request.attachFile( file, true )
        attachment.contentType = "application/octet-stream"
        attachment.setContentID("doc")

       // def holder2 = groovyUtils.getXmlHolder( "sendDocument#Request" ) // Get Request body
      //  holder2.setNodeValue( "//upl:UploadDataAfterCheckRequest/uploadedData","cid:"+fileName.getValue()); //Set "link" to attachment in request body
      //  holder2.updateProperty() //and update
        log.info "file attached succesfully"
    }</script></con:config></con:testStep><con:testStep type="request" id="91371b11-f43c-4d39-856c-952d442dc607" name="sendDocuments"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>dhlHttpSoapPortSoapBinding</con:interface><con:operation>sendDocuments</con:operation><con:request name="sendDocuments" id="7d8c9a0c-ba23-4e1c-9577-66fcd09a83bd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#dvkEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xtee="http://x-tee.riik.ee/xsd/xtee.xsd" xmlns:dhl="http://producers.dhl.xtee.riik.ee/producer/dhl">
    <soapenv:Header>
       <ns4:protocolVersion xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">4.0</ns4:protocolVersion>
    <ns4:id xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers"
      xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">64a3ddbd-1620-42c4-b2fe-60b854c2f32f
    </ns4:id>
         <ns4:client xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dhs3MemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dhs3MemberCode}</ns3:memberCode>
       <ns3:subsystemCode>${#Project#dhs3Subsystem}</ns3:subsystemCode>
    </ns4:client>
        <ns4:service xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/"
      ns3:objectType="SERVICE">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dvkMemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dvkMemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dvkSubsystem}</ns3:subsystemCode>
      <ns3:serviceCode>sendDocuments</ns3:serviceCode>
      <ns3:serviceVersion>v4</ns3:serviceVersion>
    </ns4:service>
   </soapenv:Header>
   <soapenv:Body>
      <dhl:sendDocuments>
         <keha>
            <dokumendid href="cid:doc"></dokumendid>
            <kaust>/test</kaust>
         </keha>
      </dhl:sendDocuments>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="579f87ca-a3af-4363-9576-52d329ef8ba5" name="SOAP Response"/><con:assertion type="Simple Contains" id="9c245752-7856-4eef-bfe8-dec113e9bf61" name="Contains fault"><con:configuration><token>fault</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="68a41e6d-6543-44fa-abdb-f767821532aa" name="Not Contains keha"><con:configuration><token>keha</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>kapsel_21invalid.xml</con:name><con:contentType>application/octet-stream</con:contentType><con:size>11827</con:size><con:contentId>doc</con:contentId><con:url>../git/dhx-etalon/src/main/resources/conf/etalon1/client/kapsel_21invalid.xml</con:url><con:data></con:data><con:id>cb053ff1-2216-41f0-99a7-62b4bb5c8509</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/sendDocumentsRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="54e9e9a4-3273-4ccb-ab6e-2deb3f8d70d7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="2.4. Vahendatavale saatmine" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Attach file and base64Gzip" id="5d6117f6-8f08-46c2-952b-5d3c6b219338"><con:settings/><con:config><script><![CDATA[import groovy.xml.MarkupBuilder
import org.custommonkey.xmlunit.*
import java.util.Random  
import java.security.MessageDigest
import java.nio.file.*


    def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
    def projectPath = groovyUtils.projectPath
    log.info projectPath

    def project = testRunner.testCase.testSuite.project
        log.info "Project: " + project.name
        def myTestSuite = testRunner.testCase.testSuite;
        log.info "TestSuite: " + myTestSuite.name

    def testCase = testRunner.testCase
    log.info "TestCase: " + testCase.name

    def testStepUploadDataAfterCheck = testCase.getTestStepByName("sendDocuments")
    def request= testStepUploadDataAfterCheck.testRequest
    log.info "TestStep: " + testStepUploadDataAfterCheck.name

    // clear existing attachments
    for( a in request.attachments ) {
        request.removeAttachment( a )
    }

//-----------read and bse64 gzip file-------------------
//no buffering is done, streams are read directly info strings, because its tests
FileInputStream attFile = null;
ByteArrayOutputStream bos = null;
 java.util.zip.GZIPOutputStream gos = null;
  try {
    def fileNamePath = testRunner.testCase.testSuite.project.getPropertyValue( "goodCapsule" )
    def senderMemberCode = testRunner.testCase.testSuite.project.getPropertyValue( "dhs3MemberCode" )
     def recipientMemberCode =  testRunner.testCase.testSuite.project.getPropertyValue( "dhs2RepresenteeCode" )
    
     log.info "file to attach: " + fileNamePath
    attFile = new FileInputStream(fileNamePath)
    def attStr = attFile.text;
    attStr = attStr.replaceAll( /(?ms)(<DecSender>.*?<OrganisationCode>.*?<\/OrganisationCode>)/, '<DecSender><OrganisationCode>'+ senderMemberCode + '</OrganisationCode>')
    attStr = attStr.replaceAll( /(?ms)(<DecRecipient>.*?<OrganisationCode>.*?<\/OrganisationCode>)/, '<DecRecipient><OrganisationCode>'+ recipientMemberCode + '</OrganisationCode>')
    log.info "file to attach: " + attStr
    bos = new ByteArrayOutputStream();
     //OutputStream base64EncoderStream = javax.mail.internet.MimeUtility.encode(bos, "base64");
     gos = new java.util.zip.GZIPOutputStream( bos);
     gos.write(attStr.getBytes())
      gos.finish();
     //bos.write(attStr.getBytes())
     def attachment = request.attachBinaryData(bos.toByteArray().encodeBase64().toString().getBytes("UTF-8"), 'application/octet-stream' )
     attachment.setContentID("doc")
     log.info "file attached succesfully"
    } catch(Exception ex) {
  	log.error(ex.getMessage(), ex);
  	} finally  {
  	  	if(attFile != null) {
  	  		attFile.close();
  	  	}
  	  	if(gos != null) {
  	  		gos.close();
  	  	}
  	  	if(bos != null) {
  	  		bos.close();
  	  	}
  	}
 //----------- end ead and bse64 gzip file-------------------
]]></script></con:config></con:testStep><con:testStep type="request" id="2c1f2327-f7ca-43ed-a547-6ef45b0bdfe1" name="sendDocuments"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>dhlHttpSoapPortSoapBinding</con:interface><con:operation>sendDocuments</con:operation><con:request name="sendDocuments" id="7d8c9a0c-ba23-4e1c-9577-66fcd09a83bd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#dvkEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xtee="http://x-tee.riik.ee/xsd/xtee.xsd" xmlns:dhl="http://producers.dhl.xtee.riik.ee/producer/dhl">
    <soapenv:Header>
       <ns4:protocolVersion xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">4.0</ns4:protocolVersion>
    <ns4:id xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers"
      xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">64a3ddbd-1620-42c4-b2fe-60b854c2f32f
    </ns4:id>
         <ns4:client xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dhs3MemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dhs3MemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dhs3Subsystem}</ns3:subsystemCode>
    </ns4:client>
        <ns4:service xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/"
      ns3:objectType="SERVICE">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dvkMemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dvkMemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dvkSubsystem}</ns3:subsystemCode>
      <ns3:serviceCode>sendDocuments</ns3:serviceCode>
      <ns3:serviceVersion>v4</ns3:serviceVersion>
    </ns4:service>
   </soapenv:Header>
   <soapenv:Body>
      <dhl:sendDocuments>
         <keha>
            <dokumendid href="cid:doc"></dokumendid>
            <kaust>/test</kaust>
         </keha>
      </dhl:sendDocuments>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="579f87ca-a3af-4363-9576-52d329ef8ba5" name="SOAP Response"/><con:assertion type="Valid HTTP Status Codes" id="a68e0f8d-74c9-4af4-a2bc-db063f86793d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="c79c1df8-73d0-49c7-9c92-48f7a34a8193" name="Not Contains fault"><con:configuration><token>fault</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="6fbfd308-2c62-4656-b25f-98af4b0e938b" name="Contains href"><con:configuration><token>href="cid:</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>binaryContent1382017711402206670.tmp</con:name><con:contentType>application/octet-stream</con:contentType><con:contentId>doc</con:contentId><con:url>../../BPW~1.BPW/AppData/Local/Temp/binaryContent1382017711402206670.tmp</con:url><con:id>512738fa-6da6-482a-89d1-f829a3acb54c</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/sendDocumentsRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6144e437-cd22-4dcd-bdc6-fc1e2f3a466a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="2.5. Valele adressaadile saatmine" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Attach file and base64Gzip" id="8367d625-68a6-4c86-ba4e-f15a9b11f1fb"><con:settings/><con:config><script><![CDATA[import groovy.xml.MarkupBuilder
import org.custommonkey.xmlunit.*
import java.util.Random  
import java.security.MessageDigest
import java.nio.file.*


    def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
    def projectPath = groovyUtils.projectPath
    log.info projectPath

    def project = testRunner.testCase.testSuite.project
        log.info "Project: " + project.name
        def myTestSuite = testRunner.testCase.testSuite;
        log.info "TestSuite: " + myTestSuite.name

    def testCase = testRunner.testCase
    log.info "TestCase: " + testCase.name

    def testStepUploadDataAfterCheck = testCase.getTestStepByName("sendDocuments")
    def request= testStepUploadDataAfterCheck.testRequest
    log.info "TestStep: " + testStepUploadDataAfterCheck.name

    // clear existing attachments
    for( a in request.attachments ) {
        request.removeAttachment( a )
    }

//-----------read and bse64 gzip file-------------------
//no buffering is done, streams are read directly info strings, because its tests
FileInputStream attFile = null;
ByteArrayOutputStream bos = null;
 java.util.zip.GZIPOutputStream gos = null;
  try {
    def fileNamePath = testRunner.testCase.testSuite.project.getPropertyValue( "goodCapsule" )
    def senderMemberCode = testRunner.testCase.testSuite.project.getPropertyValue( "dhs3MemberCode" )
       def recipientMemberCode = "wrong"
     log.info "file to attach: " + fileNamePath
    attFile = new FileInputStream(fileNamePath)
    def attStr = attFile.text;
   attStr = attStr.replaceAll( /(?ms)(<.*?DecSender>.*?<.*?OrganisationCode>).*?(<\/.*?OrganisationCode>)/, '$1'+ senderMemberCode + '$2')
   attStr = attStr.replaceAll( /(?ms)(<.*?DecRecipient>.*?<.*?OrganisationCode>).*?(<\/.*?OrganisationCode>)/, '$1'+ recipientMemberCode + '$2')
 //   attStr = attStr.replaceAll( /(?ms)(<.*?:DecRecipient>.*?<.*?:OrganisationCode>.*?<\/.*?:OrganisationCode>)/, '<DecRecipient><OrganisationCode>'+ recipientMemberCode + '</OrganisationCode>')
     log.info "file to attach: " + attStr
    bos = new ByteArrayOutputStream();
     //OutputStream base64EncoderStream = javax.mail.internet.MimeUtility.encode(bos, "base64");
     gos = new java.util.zip.GZIPOutputStream( bos);
     gos.write(attStr.getBytes())
      gos.finish();
     //bos.write(attStr.getBytes())
     def attachment = request.attachBinaryData(bos.toByteArray().encodeBase64().toString().getBytes("UTF-8"), 'application/octet-stream' )
     attachment.setContentID("doc")
     log.info "file attached succesfully"
    } catch(Exception ex) {
  	log.error(ex.getMessage(), ex);
  	} finally  {
  	  	if(attFile != null) {
  	  		attFile.close();
  	  	}
  	  	if(gos != null) {
  	  		gos.close();
  	  	}
  	  	if(bos != null) {
  	  		bos.close();
  	  	}
  	}
 //----------- end ead and bse64 gzip file-------------------
]]></script></con:config></con:testStep><con:testStep type="request" id="68d8b74b-ed02-4f06-96fa-f846fda61957" name="sendDocuments"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>dhlHttpSoapPortSoapBinding</con:interface><con:operation>sendDocuments</con:operation><con:request name="sendDocuments" id="7d8c9a0c-ba23-4e1c-9577-66fcd09a83bd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#dvkEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xtee="http://x-tee.riik.ee/xsd/xtee.xsd" xmlns:dhl="http://producers.dhl.xtee.riik.ee/producer/dhl">
    <soapenv:Header>
       <ns4:protocolVersion xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">4.0</ns4:protocolVersion>
    <ns4:id xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers"
      xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">64a3ddbd-1620-42c4-b2fe-60b854c2f32f
    </ns4:id>
         <ns4:client xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dhs3MemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dhs3MemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dhs3Subsystem}</ns3:subsystemCode>
    </ns4:client>
        <ns4:service xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/"
      ns3:objectType="SERVICE">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dvkMemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dvkMemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dvkSubsystem}</ns3:subsystemCode>
      <ns3:serviceCode>sendDocuments</ns3:serviceCode>
      <ns3:serviceVersion>v4</ns3:serviceVersion>
    </ns4:service>
   </soapenv:Header>
   <soapenv:Body>
      <dhl:sendDocuments>
         <keha>
            <dokumendid href="cid:doc"></dokumendid>
            <kaust>/test</kaust>
         </keha>
      </dhl:sendDocuments>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="579f87ca-a3af-4363-9576-52d329ef8ba5" name="SOAP Response"/><con:assertion type="Not SOAP Fault Assertion" id="fcf89ae5-6554-4aca-9b20-c307f2b5a67c" name="SOAP Fault"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>binaryContent8641836290413680062.tmp</con:name><con:contentType>application/octet-stream</con:contentType><con:contentId>doc</con:contentId><con:url>../../BPW~1.BPW/AppData/Local/Temp/binaryContent8641836290413680062.tmp</con:url><con:id>72b0dd59-a0e4-42a9-9953-c53bd8c28a4c</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/sendDocumentsRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ab77fd13-ee86-47e6-a3d9-0648d060ad39" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="2.6. DHX süsteemist tulnud dokumendi vastuvõtmine" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Õige kapsli saatmine" id="2fe57569-05f6-4130-aba5-c0df84f8f221"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>947b51f6-967d-4bbd-ae9b-fa23cfa5a950</con:targetTestCase><con:properties><con:property><con:name>dhxReceiptId</con:name><con:value>14216</con:value></con:property></con:properties><con:returnProperties><con:entry>dhxReceiptId</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Dhl id" id="f2141c13-d9e4-4aaf-a1f3-4d367420f724"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>DHL id</con:name><con:sourceType>dhxReceiptId</con:sourceType><con:sourceStep>Õige kapsli saatmine</con:sourceStep><con:targetType>dhl_id</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="ee7ce2a8-b2c7-471f-81c8-7e351b0f1030" name="receiveDocuments"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>dhlHttpSoapPortSoapBinding</con:interface><con:operation>receiveDocuments</con:operation><con:request name="receiveDocuments" id="ab8cec9a-745a-4701-a892-d369f597970b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#dvkEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://localhost:8084/dvk/services/dhlHttpSoapPort">\r
    <soapenv:Header>
       <ns4:protocolVersion xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">4.0</ns4:protocolVersion>
    <ns4:id xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers"
      xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">64a3ddbd-1620-42c4-b2fe-60b854c2f32f
    </ns4:id>
         <ns4:client xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dhs3MemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dhs3MemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dhs3Subsystem}</ns3:subsystemCode>
    </ns4:client>
     <ns4:service xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/"
      ns3:objectType="SERVICE">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dvkMemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dvkMemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dvkSubsystem}</ns3:subsystemCode>
      <ns3:serviceCode>receiveDocuments</ns3:serviceCode>
      <ns3:serviceVersion>v4</ns3:serviceVersion>
    </ns4:service>
    <ns4:userId xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers"
      xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">${#Project#dhs3AdminUserId}
    </ns4:userId>
   </soapenv:Header>
   <soapenv:Body>\r
      <dhl:receiveDocuments soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">\r
         <keha xsi:type="xsd:anyType">
         <arv>50</arv>
         </keha>\r
      </dhl:receiveDocuments>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/receiveDocumentsRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Check attachment" id="09c78a84-5545-4848-92c9-1ca9dc360a42"><con:settings/><con:config><script>log.info " Attachment Name: " + testRunner.testCase.getTestStepByName( "receiveDocuments").testStep.testRequest.response.attachments[0].getName();
log.info " Attachment ContentType: " + testRunner.testCase.getTestStepByName( "receiveDocuments").testStep.testRequest.response.attachments[0].getContentType();
def attachment_stream = testRunner.testCase.getTestStepByName( "receiveDocuments").testStep.testRequest.response.attachments[0].getInputStream();
 InputStream base64DecoderStream = null;
 base64DecoderStream = javax.mail.internet.MimeUtility.decode(attachment_stream, "base64");
 java.util.zip.GZIPInputStream gis = new java.util.zip.GZIPInputStream(base64DecoderStream);
 def xml = gis.text;
 log.info "xml" + xml;
 def dhlId = testRunner.testCase.getPropertyValue( "dhl_id" )
 log.info dhlId
assert xml.contains('DecId>'+ dhlId  +'&lt;/');
 //def fileNamePath = testRunner.testCase.setPropertyValue( "dhl_id", "200" )</script></con:config></con:testStep><con:properties><con:property><con:name>dhl_id</con:name><con:value>14216</con:value></con:property></con:properties></con:testCase><con:testCase id="cab70071-bc2a-4419-a96e-c94b39ad012f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="2.7. DHX süsteemist tulnud dokumendi vastuvõetuks märkimine" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Send capsule" id="ad5e360b-8132-4d74-970d-47ebe6ec3bc0"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>947b51f6-967d-4bbd-ae9b-fa23cfa5a950</con:targetTestCase><con:properties><con:property><con:name>dhxReceiptId</con:name><con:value>14217</con:value></con:property></con:properties><con:returnProperties><con:entry>dhxReceiptId</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Dhx receipt id as dhl_id" id="1b0fb296-8a41-4ed6-a366-48773b5f8969"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>DHX receipt ID -> DVK document Id</con:name><con:sourceType>dhxReceiptId</con:sourceType><con:sourceStep>Send capsule</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>markDocumentsReceived</con:targetStep><con:targetPath>declare namespace dhl='http://producers.dhl.xtee.riik.ee/producer/dhl';
//dhl:markDocumentsReceived[1]/keha[1]/dokumendid[1]/item[1]/dhl_id[1]</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="72c67064-e9d5-44ae-8e10-9272fec2b8f7" name="markDocumentsReceived"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>dhlHttpSoapPortSoapBinding</con:interface><con:operation>markDocumentsReceived</con:operation><con:request name="markDocumentsReceived" id="1990d329-c9c4-40d2-b518-db995b901165"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#dvkEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://producers.dhl.xtee.riik.ee/producer/dhl" xmlns:xsi="xsi">
    <soapenv:Header>
       <ns4:protocolVersion xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">4.0</ns4:protocolVersion>
    <ns4:id xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">64a3ddbd-1620-42c4-b2fe-60b854c2f32f
    </ns4:id>
         <ns4:client xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dhs3MemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dhs3MemberCode}</ns3:memberCode>
       <ns3:subsystemCode>${#Project#dhs3Subsystem}</ns3:subsystemCode>
    </ns4:client>
        <ns4:service ns3:objectType="SERVICE" xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dvkMemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dvkMemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dvkSubsystem}</ns3:subsystemCode>
      <ns3:serviceCode>markDocumentsReceived</ns3:serviceCode>
      <ns3:serviceVersion>v3</ns3:serviceVersion>
    </ns4:service>
   </soapenv:Header>
   <soapenv:Body>
      <dhl:markDocumentsReceived>
         <keha>
            <dokumendid xsi:type="SOAP-ENC:Array" SOAP-ENC:arrayType="dhl:asutus[3]">
        <item>
          <dhl_id>14217</dhl_id>
        </item>
      </dokumendid>
         </keha>
      </dhl:markDocumentsReceived>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="69f5df2e-63d2-48a2-b6bc-7f4735ecabd9" name="SOAP Response"/><con:assertion type="Simple NotContains" id="bb2fe644-bb96-4a3f-8976-63f23a4f65af" name="Not Contains fault"><con:configuration><token>fault</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ffa5a026-e792-4525-8902-aeb7711bdc50" name="Contains keha"><con:configuration><token>&lt;keha>OK&lt;/keha></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/markDocumentsReceivedRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e7061bd9-202f-42c9-95c3-ebd69c07dde9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="2.8. DHX süsteemist tulnud dokumendi vastuvõtmine. Dokument on suunatud alamsüsteemile." searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Send capsule" id="7ec56976-7852-4c65-9829-938fc89dac85"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ce9e775-7fdf-42ad-b532-9de6b2a8c69b</con:targetTestCase><con:properties><con:property><con:name>dhxReceiptId</con:name><con:value>14218</con:value></con:property></con:properties><con:returnProperties><con:entry>dhxReceiptId</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Dhx receipt id as dhl_id" id="4e913fb0-5051-4aa2-9992-4116babddb25"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>DHX receipt ID -> DVK document Id</con:name><con:sourceType>dhxReceiptId</con:sourceType><con:sourceStep>Send capsule</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>markDocumentsReceived</con:targetStep><con:targetPath>declare namespace dhl='http://producers.dhl.xtee.riik.ee/producer/dhl';
//dhl:markDocumentsReceived[1]/keha[1]/dokumendid[1]/item[1]/dhl_id[1]</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="1c11e10d-329b-4014-86ad-a23f2c8f3c3f" name="markDocumentsReceived"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>dhlHttpSoapPortSoapBinding</con:interface><con:operation>markDocumentsReceived</con:operation><con:request name="markDocumentsReceived" id="1990d329-c9c4-40d2-b518-db995b901165"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#dvkEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://producers.dhl.xtee.riik.ee/producer/dhl" xmlns:xsi="xsi">
    <soapenv:Header>
       <ns4:protocolVersion xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">4.0</ns4:protocolVersion>
    <ns4:id xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">64a3ddbd-1620-42c4-b2fe-60b854c2f32f
    </ns4:id>
         <ns4:client xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dhs3MemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dhs3MemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dhs3Subsystem2}</ns3:subsystemCode>
    </ns4:client>
        <ns4:service ns3:objectType="SERVICE" xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dvkMemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dvkMemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dvkSubsystem}</ns3:subsystemCode>
      <ns3:serviceCode>markDocumentsReceived</ns3:serviceCode>
      <ns3:serviceVersion>v3</ns3:serviceVersion>
    </ns4:service>
   </soapenv:Header>
   <soapenv:Body>
      <dhl:markDocumentsReceived>
         <keha>
            <dokumendid xsi:type="SOAP-ENC:Array" SOAP-ENC:arrayType="dhl:asutus[3]">
        <item>
          <dhl_id>14218</dhl_id>
        </item>
      </dokumendid>
         </keha>
      </dhl:markDocumentsReceived>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="69f5df2e-63d2-48a2-b6bc-7f4735ecabd9" name="SOAP Response"/><con:assertion type="Simple NotContains" id="bb2fe644-bb96-4a3f-8976-63f23a4f65af" name="Not Contains fault"><con:configuration><token>fault</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ffa5a026-e792-4525-8902-aeb7711bdc50" name="Contains keha"><con:configuration><token>&lt;keha>OK&lt;/keha></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/markDocumentsReceivedRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b22387fe-884f-4eb4-9d27-49d02b4bcf8c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="2.9. DVK adressaatide nimekirja pärimine." searchProperties="true"><con:settings/><con:testStep type="request" id="048c88d6-40c7-457b-bd19-489a2437d25f" name="getSendingOptions"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>dhlHttpSoapPortSoapBinding</con:interface><con:operation>getSendingOptions</con:operation><con:request name="getSendingOptions" id="639cd104-c0b1-4563-bbe9-5275aee61fb4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#dvkEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://dhl">\r
    <soapenv:Header>
       <ns4:protocolVersion xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">4.0</ns4:protocolVersion>
    <ns4:id xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers"
      xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">64a3ddbd-1620-42c4-b2fe-60b854c2f32f
    </ns4:id>
         <ns4:client xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dhs3MemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dhs3MemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dhs3Subsystem}</ns3:subsystemCode>
    </ns4:client>
        <ns4:service xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/"
      ns3:objectType="SERVICE">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dvkMemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dvkMemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dvkSubsystem}</ns3:subsystemCode>
      <ns3:serviceCode>getSendingOptions</ns3:serviceCode>
      <ns3:serviceVersion>v2</ns3:serviceVersion>
    </ns4:service>
   </soapenv:Header>

   <soapenv:Body>\r
      <dhl:getSendingOptions soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">\r
         <keha xsi:type="xsd:anyType"></keha>\r
      </dhl:getSendingOptions>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="087c988a-f7f7-490a-b894-c1b9ffc8a119" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/getSendingOptionsRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Check response" id="187d8ebe-d06d-4dae-add9-e1c8d77514b0"><con:settings/><con:config><script>def request=  testRunner.testCase.getTestStepByName( "getSendingOptions").testStep.testRequest
def recipientMemberCode = testRunner.testCase.testSuite.project.getPropertyValue( "dhs2MemberCode" )
def recipientMemberCode2 = testRunner.testCase.testSuite.project.getPropertyValue( "dhs2RepresenteeCode" )

def resp = request.response;
def respdata = resp.getContentAsString();
assert respdata.contains('&lt;regnr>' + recipientMemberCode  + '&lt;/regnr>');
assert respdata.contains('&lt;regnr>' + recipientMemberCode2  + '&lt;/regnr>');</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a08236aa-fa91-4838-ace2-0598d464e42a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="2.10 DHX-i saadetud dokumendi staatuse pärimine(saatmine õnnestus)" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Send to DHX" id="8656049a-3f37-4534-9a8a-3f8de3f83c24"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>63be369f-26a7-469c-b4ab-ec825294cac7</con:targetTestCase><con:properties><con:property><con:name>dhl_id</con:name><con:value>14219</con:value></con:property></con:properties><con:returnProperties><con:entry>dhl_id</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Dhl id" id="28309046-3171-4f82-a0b1-9adc03035e74"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Dhl id</con:name><con:sourceType>dhl_id</con:sourceType><con:sourceStep>Send to DHX</con:sourceStep><con:targetType>dhl_id</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Wait and attach" id="4acc742f-3613-49d5-a323-dcff4d63bbab"><con:settings/><con:config><script><![CDATA[import groovy.xml.MarkupBuilder
import org.custommonkey.xmlunit.*
import java.util.Random  
import java.security.MessageDigest
import java.nio.file.*
//document is being sent to DHX after some with job, some need to wait for job to send the document
sleep(65000)
    def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
    def projectPath = groovyUtils.projectPath
    log.info projectPath

    def project = testRunner.testCase.testSuite.project
        log.info "Project: " + project.name
        def myTestSuite = testRunner.testCase.testSuite;
        log.info "TestSuite: " + myTestSuite.name

    def testCase = testRunner.testCase
    log.info "TestCase: " + testCase.name

    def testStepUploadDataAfterCheck = testCase.getTestStepByName("getSendStatus")
    def request= testStepUploadDataAfterCheck.testRequest
    log.info "TestStep: " + testStepUploadDataAfterCheck.name

    // clear existing attachments
    for( a in request.attachments ) {
        request.removeAttachment( a )
    }

//-----------read and bse64 gzip file-------------------
//no buffering is done, streams are read directly info strings, because its tests
FileInputStream attFile = null;
ByteArrayOutputStream bos = null;
 java.util.zip.GZIPOutputStream gos = null;
  try {
    def file = '<item> <dhl_id></dhl_id></item>'
   def dhlId = testRunner.testCase.getPropertyValue( "dhl_id" )
   file = file.replace('<dhl_id></dhl_id>', '<dhl_id>' + dhlId  +'</dhl_id>');
    log.info "file to attach: " + file
    bos = new ByteArrayOutputStream();
     //OutputStream base64EncoderStream = javax.mail.internet.MimeUtility.encode(bos, "base64");
     gos = new java.util.zip.GZIPOutputStream( bos);
     gos.write(file.getBytes())
      gos.finish();
     //bos.write(attStr.getBytes())
     def attachment = request.attachBinaryData(bos.toByteArray().encodeBase64().toString().getBytes("UTF-8"), 'application/octet-stream' )
     attachment.setContentID("doc")
     log.info "file attached succesfully"
    } catch(Exception ex) {
  	log.error(ex.getMessage(), ex);
  	} finally  {
  	  	if(attFile != null) {
  	  		attFile.close();
  	  	}
  	  	if(gos != null) {
  	  		gos.close();
  	  	}
  	  	if(bos != null) {
  	  		bos.close();
  	  	}
  	}
 //----------- end ead and bse64 gzip file-------------------
]]></script></con:config></con:testStep><con:testStep type="request" id="5dd0a67b-8e90-4034-99f6-bc8656b3f44a" name="getSendStatus"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>dhlHttpSoapPortSoapBinding</con:interface><con:operation>markDocumentsReceived</con:operation><con:request name="getSendStatus" id="1990d329-c9c4-40d2-b518-db995b901165"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#dvkEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://producers.dhl.xtee.riik.ee/producer/dhl" xmlns:xsi="xsi">
    <soapenv:Header>
       <ns4:protocolVersion xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">4.0</ns4:protocolVersion>
    <ns4:id xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">64a3ddbd-1620-42c4-b2fe-60b854c2f32f
    </ns4:id>
         <ns4:client xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dhs3MemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dhs3MemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dhs3Subsystem2}</ns3:subsystemCode>
    </ns4:client>
        <ns4:service ns3:objectType="SERVICE" xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dvkMemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dvkMemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dvkSubsystem}</ns3:subsystemCode>
      <ns3:serviceCode>getSendStatus</ns3:serviceCode>
      <ns3:serviceVersion>v2</ns3:serviceVersion>
    </ns4:service>
   </soapenv:Header>
   <soapenv:Body>
  <dhl:getSendStatus>
    <keha>
      <dokumendid href="cid:doc"/>
      <staatuse_ajalugu>false</staatuse_ajalugu>
      </keha>
  </dhl:getSendStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="69f5df2e-63d2-48a2-b6bc-7f4735ecabd9" name="SOAP Response"/><con:assertion type="Simple NotContains" id="bb2fe644-bb96-4a3f-8976-63f23a4f65af" name="Not Contains fault"><con:configuration><token>fault</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ffa5a026-e792-4525-8902-aeb7711bdc50" name="Contains keha"><con:configuration><token>&lt;keha</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>binaryContent6112873777988173349.tmp</con:name><con:contentType>application/octet-stream</con:contentType><con:contentId>doc</con:contentId><con:url>../../BPW~1.BPW/AppData/Local/Temp/binaryContent6112873777988173349.tmp</con:url><con:id>cce5de93-44df-48ae-a668-6a617939e6b1</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/markDocumentsReceivedRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Check response" id="d3b47d56-b264-4839-ab46-515eddef5090"><con:settings/><con:config><script>log.info " Attachment Name: " + testRunner.testCase.getTestStepByName( "getSendStatus").testStep.testRequest.response.attachments[0].getName();
log.info " Attachment ContentType: " + testRunner.testCase.getTestStepByName( "getSendStatus").testStep.testRequest.response.attachments[0].getContentType();
def attachment_stream = testRunner.testCase.getTestStepByName( "getSendStatus").testStep.testRequest.response.attachments[0].getInputStream();
 InputStream base64DecoderStream = null;
 base64DecoderStream = javax.mail.internet.MimeUtility.decode(attachment_stream, "base64");
 java.util.zip.GZIPInputStream gis = new java.util.zip.GZIPInputStream(base64DecoderStream);
 def xml = gis.text;
log.info "xml" + xml;
assert xml.contains('&lt;staatus>saadetud&lt;/staatus>');
</script></con:config></con:testStep><con:properties><con:property><con:name>dhl_id</con:name><con:value>14219</con:value></con:property></con:properties></con:testCase><con:testCase id="8ae5c054-8b29-4714-a7c7-eb9f7613b3b1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="2.12. Õige kapsli saatmine DHX alamsüsteemile(DHX. prefiksiga X-tee alamsüsteemile)" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Attach file and base64Gzip" id="0e5b1633-4329-4d4c-b148-ab4f5bc3c27c"><con:settings/><con:config><script><![CDATA[import groovy.xml.MarkupBuilder
import org.custommonkey.xmlunit.*
import java.util.Random  
import java.security.MessageDigest
import java.nio.file.*


    def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
    def projectPath = groovyUtils.projectPath
    log.info projectPath

    def project = testRunner.testCase.testSuite.project
        log.info "Project: " + project.name
        def myTestSuite = testRunner.testCase.testSuite;
        log.info "TestSuite: " + myTestSuite.name

    def testCase = testRunner.testCase
    log.info "TestCase: " + testCase.name

    def testStepUploadDataAfterCheck = testCase.getTestStepByName("sendDocuments")
    def request= testStepUploadDataAfterCheck.testRequest
    log.info "TestStep: " + testStepUploadDataAfterCheck.name

    // clear existing attachments
    for( a in request.attachments ) {
        request.removeAttachment( a )
    }

//-----------read and bse64 gzip file-------------------
//no buffering is done, streams are read directly info strings, because its tests
FileInputStream attFile = null;
ByteArrayOutputStream bos = null;
 java.util.zip.GZIPOutputStream gos = null;
  try {
    def fileNamePath = testRunner.testCase.testSuite.project.getPropertyValue( "goodCapsule" )
    def senderMemberCode = testRunner.testCase.testSuite.project.getPropertyValue( "dhs3MemberCode" )
       def recipientMemberCode =  testRunner.testCase.testSuite.project.getPropertyValue( "dhs2Subsystem2" ) + '.' + testRunner.testCase.testSuite.project.getPropertyValue( "dhs2MemberCode" )
     log.info "file to attach: " + fileNamePath
    attFile = new FileInputStream(fileNamePath)
    def attStr = attFile.text;
   attStr = attStr.replaceAll( /(?ms)(<.*?DecSender>.*?<.*?OrganisationCode>).*?(<\/.*?OrganisationCode>)/, '$1'+ senderMemberCode + '$2')
   attStr = attStr.replaceAll( /(?ms)(<.*?DecRecipient>.*?<.*?OrganisationCode>).*?(<\/.*?OrganisationCode>)/, '$1'+ recipientMemberCode + '$2')
 //   attStr = attStr.replaceAll( /(?ms)(<.*?:DecRecipient>.*?<.*?:OrganisationCode>.*?<\/.*?:OrganisationCode>)/, '<DecRecipient><OrganisationCode>'+ recipientMemberCode + '</OrganisationCode>')
     log.info "file to attach: " + attStr
    bos = new ByteArrayOutputStream();
     //OutputStream base64EncoderStream = javax.mail.internet.MimeUtility.encode(bos, "base64");
     gos = new java.util.zip.GZIPOutputStream( bos);
     gos.write(attStr.getBytes())
      gos.finish();
     //bos.write(attStr.getBytes())
     def attachment = request.attachBinaryData(bos.toByteArray().encodeBase64().toString().getBytes("UTF-8"), 'application/octet-stream' )
     attachment.setContentID("doc")
     log.info "file attached succesfully"
    } catch(Exception ex) {
  	log.error(ex.getMessage(), ex);
  	} finally  {
  	  	if(attFile != null) {
  	  		attFile.close();
  	  	}
  	  	if(gos != null) {
  	  		gos.close();
  	  	}
  	  	if(bos != null) {
  	  		bos.close();
  	  	}
  	}
 //----------- end ead and bse64 gzip file-------------------
]]></script></con:config></con:testStep><con:testStep type="request" id="0d920504-aa01-4d39-ac9b-ffde45999385" name="sendDocuments"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>dhlHttpSoapPortSoapBinding</con:interface><con:operation>sendDocuments</con:operation><con:request name="sendDocuments" id="7d8c9a0c-ba23-4e1c-9577-66fcd09a83bd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#dvkEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xtee="http://x-tee.riik.ee/xsd/xtee.xsd" xmlns:dhl="http://producers.dhl.xtee.riik.ee/producer/dhl">
    <soapenv:Header>
       <ns4:protocolVersion xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">4.0</ns4:protocolVersion>
    <ns4:id xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers"
      xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">64a3ddbd-1620-42c4-b2fe-60b854c2f32f
    </ns4:id>
         <ns4:client xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dhs3MemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dhs3MemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dhs3Subsystem}</ns3:subsystemCode>
    </ns4:client>
        <ns4:service xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/"
      ns3:objectType="SERVICE">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dvkMemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dvkMemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dvkSubsystem}</ns3:subsystemCode>
      <ns3:serviceCode>sendDocuments</ns3:serviceCode>
      <ns3:serviceVersion>v4</ns3:serviceVersion>
    </ns4:service>
   </soapenv:Header>
   <soapenv:Body>
      <dhl:sendDocuments>
         <keha>
            <dokumendid href="cid:doc"></dokumendid>
            <kaust>/</kaust>
         </keha>
      </dhl:sendDocuments>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="579f87ca-a3af-4363-9576-52d329ef8ba5" name="SOAP Response"/><con:assertion type="Valid HTTP Status Codes" id="a68e0f8d-74c9-4af4-a2bc-db063f86793d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="c79c1df8-73d0-49c7-9c92-48f7a34a8193" name="Not Contains fault"><con:configuration><token>fault</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="6fbfd308-2c62-4656-b25f-98af4b0e938b" name="Contains href"><con:configuration><token>href="cid:</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>binaryContent8494158629201897199.tmp</con:name><con:contentType>application/octet-stream</con:contentType><con:contentId>doc</con:contentId><con:url>../../BPW~1.BPW/AppData/Local/Temp/binaryContent8494158629201897199.tmp</con:url><con:id>a5127d61-d55a-4adc-a583-600cf34893a4</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/sendDocumentsRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Check attachment" id="9b35705a-8158-4936-946d-579c073f9713"><con:settings/><con:config><script>log.info " Attachment Name: " + testRunner.testCase.getTestStepByName( "sendDocuments").testStep.testRequest.response.attachments[0].getName();
log.info " Attachment ContentType: " + testRunner.testCase.getTestStepByName( "sendDocuments").testStep.testRequest.response.attachments[0].getContentType();
def attachment_stream = testRunner.testCase.getTestStepByName( "sendDocuments").testStep.testRequest.response.attachments[0].getInputStream();
 InputStream base64DecoderStream = null;
 base64DecoderStream = javax.mail.internet.MimeUtility.decode(attachment_stream, "base64");
 java.util.zip.GZIPInputStream gis = new java.util.zip.GZIPInputStream(base64DecoderStream);
 def xml = gis.text;
 log.info xml
assert xml.contains('dhl_id');
String dhl_id = xml.substring(xml.indexOf('&lt;dhl_id>')+8,  xml.indexOf('&lt;/dhl_id>'));
log.info dhl_id
def tt = testRunner.testCase.setPropertyValue( "dhl_id", dhl_id )</script></con:config></con:testStep><con:properties><con:property><con:name>dhl_id</con:name><con:value>964</con:value></con:property></con:properties></con:testCase><con:testCase id="8af30605-c404-4894-b1c7-35966eb0f341" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="2.13. Vana kapsli(korrektselt kapseldatud fail 1.0) saatmine DHX adressaadile??" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Attach file and base64Gzip" id="ff9eca39-fda4-470b-a74a-5411307de7b1"><con:settings/><con:config><script><![CDATA[import groovy.xml.MarkupBuilder
import org.custommonkey.xmlunit.*
import java.util.Random  
import java.security.MessageDigest
import java.nio.file.*
 
    def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
    def projectPath = groovyUtils.projectPath
    log.info projectPath

    def project = testRunner.testCase.testSuite.project
        log.info "Project: " + project.name
        def myTestSuite = testRunner.testCase.testSuite;
        log.info "TestSuite: " + myTestSuite.name

    def testCase = testRunner.testCase
    log.info "TestCase: " + testCase.name

    def testStepUploadDataAfterCheck = testCase.getTestStepByName("sendDocuments")
    def request= testStepUploadDataAfterCheck.testRequest
    log.info "TestStep: " + testStepUploadDataAfterCheck.name

    // clear existing attachments
    for( a in request.attachments ) {
        request.removeAttachment( a )
    }

//-----------read and bse64 gzip file-------------------
//no buffering is done, streams are read directly info strings, because its tests
FileInputStream attFile = null;
ByteArrayOutputStream bos = null;
 java.util.zip.GZIPOutputStream gos = null;
  try {
    def fileNamePath = testRunner.testCase.testSuite.project.getPropertyValue( "goodCapsule10" )
    def senderMemberCode = testRunner.testCase.testSuite.project.getPropertyValue( "dhs3MemberCode" )
       def recipientMemberCode =  testRunner.testCase.testSuite.project.getPropertyValue( "dhs2MemberCode" )
     log.info "file to attach: " + fileNamePath
    attFile = new FileInputStream(fileNamePath)
    def attStr = attFile.text;
   attStr = attStr.replaceAll( /(?ms)(<.*?saatja>.*?<.*?regnr>).*?(<\/.*?regnr>)/, '$1'+ senderMemberCode + '$2')
   attStr = attStr.replaceAll( /(?ms)(<.*?saaja>.*?<.*?regnr>).*?(<\/.*?regnr>)/, '$1'+ recipientMemberCode + '$2')
     log.info "file to attach: " + attStr
    bos = new ByteArrayOutputStream();
     //OutputStream base64EncoderStream = javax.mail.internet.MimeUtility.encode(bos, "base64");
     gos = new java.util.zip.GZIPOutputStream( bos);
     gos.write(attStr.getBytes())
      gos.finish();
     //bos.write(attStr.getBytes())
     def attachment = request.attachBinaryData(bos.toByteArray().encodeBase64().toString().getBytes("UTF-8"), 'application/octet-stream' )
     attachment.setContentID("doc")
     log.info "file attached succesfully"
    } catch(Exception ex) {
  	log.error(ex.getMessage(), ex);
  	} finally  {
  	  	if(attFile != null) {
  	  		attFile.close();
  	  	}
  	  	if(gos != null) {
  	  		gos.close();
  	  	}
  	  	if(bos != null) {
  	  		bos.close();
  	  	}
  	}
 //----------- end ead and bse64 gzip file-------------------
]]></script></con:config></con:testStep><con:testStep type="request" id="7a29811a-b51a-4e15-a709-3c18706108dc" name="sendDocuments"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>dhlHttpSoapPortSoapBinding</con:interface><con:operation>sendDocuments</con:operation><con:request name="sendDocuments" id="7d8c9a0c-ba23-4e1c-9577-66fcd09a83bd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#dvkEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xtee="http://x-tee.riik.ee/xsd/xtee.xsd" xmlns:dhl="http://producers.dhl.xtee.riik.ee/producer/dhl">
    <soapenv:Header>
       <ns4:protocolVersion xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">4.0</ns4:protocolVersion>
    <ns4:id xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers"
      xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">64a3ddbd-1620-42c4-b2fe-60b854c2f32f
    </ns4:id>
         <ns4:client xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dhs3MemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dhs3MemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dhs3Subsystem}</ns3:subsystemCode>
    </ns4:client>
        <ns4:service xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/"
      ns3:objectType="SERVICE">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dvkMemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dvkMemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dvkSubsystem}</ns3:subsystemCode>
      <ns3:serviceCode>sendDocuments</ns3:serviceCode>
      <ns3:serviceVersion>v1</ns3:serviceVersion>
    </ns4:service>
   </soapenv:Header>
   <soapenv:Body>
      <dhl:sendDocuments>
         <keha>
            <dokumendid href="cid:doc"></dokumendid>
            <kaust>/</kaust>
         </keha>
      </dhl:sendDocuments>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Not SOAP Fault Assertion" id="01cb7c48-5a9f-4788-9956-932b7144fcb3" name="SOAP Fault"/><con:assertion type="Simple Contains" id="d7a7e83a-d6e4-48e0-96a8-f95317a95893" name="Contains"><con:configuration><token>Leitud DHX </token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>binaryContent4617894747055202756.tmp</con:name><con:contentType>application/octet-stream</con:contentType><con:contentId>doc</con:contentId><con:url>../../BPW~1.BPW/AppData/Local/Temp/binaryContent4617894747055202756.tmp</con:url><con:id>f7ecf142-b0f0-42f1-b7e2-9baa21340681</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/sendDocumentsRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>dhl_id</con:name><con:value>914</con:value></con:property></con:properties></con:testCase><con:testCase id="5b7e276c-fde1-4851-9101-30affda7633e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="2.14. DHX süsteemist tulnud dokumendi vastuvõtmine. Adressat toetab ainult 1.0 kapsli versiooni ??" searchProperties="true" disabled="true"><con:description>Disabled, because need to uze different security server to test with different organisation which supports 1.0 capsule</con:description><con:settings/><con:testStep type="calltestcase" name="Send capsule 1.0" id="60ed6095-7d1a-4f17-ac0e-c27ecb2c0bac"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2e8ab8e6-2927-49d4-a0dd-981c93d25cf3</con:targetTestCase><con:properties><con:property><con:name>dhxReceiptId</con:name><con:value>967</con:value></con:property></con:properties><con:returnProperties><con:entry>dhxReceiptId</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Dhx receipt id as dhl_id" id="a693d22a-c1da-467f-9996-f4596c0d268a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Dhl id</con:name><con:sourceType>dhxReceiptId</con:sourceType><con:sourceStep>Send capsule 1.0</con:sourceStep><con:targetType>dhl_id</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="f2ca3c40-b588-4c30-b530-31328873b05a" name="receiveDocuments"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>dhlHttpSoapPortSoapBinding</con:interface><con:operation>receiveDocuments</con:operation><con:request name="receiveDocuments" id="ab8cec9a-745a-4701-a892-d369f597970b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#dvkEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://localhost:8084/dvk/services/dhlHttpSoapPort">\r
    <soapenv:Header>
       <ns4:protocolVersion xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">4.0</ns4:protocolVersion>
    <ns4:id xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers"
      xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">64a3ddbd-1620-42c4-b2fe-60b854c2f32f
    </ns4:id>
         <ns4:client xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dhs4MemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dhs4MemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dhs4Subsystem}</ns3:subsystemCode>
    </ns4:client>
     <ns4:service xmlns:ns2="http://dhx.x-road.eu/producer"
      xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd"
      xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/"
      ns3:objectType="SERVICE">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dvkMemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dvkMemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dvkSubsystem}</ns3:subsystemCode>
      <ns3:serviceCode>receiveDocuments</ns3:serviceCode>
      <ns3:serviceVersion>v4</ns3:serviceVersion>
    </ns4:service>
    <ns4:userId xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers"
      xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">${#Project#dhs4AdminUserId}
    </ns4:userId>
   </soapenv:Header>
   <soapenv:Body>\r
      <dhl:receiveDocuments soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">\r
         <keha xsi:type="xsd:anyType">
         <arv>50</arv>
         </keha>\r
      </dhl:receiveDocuments>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/receiveDocumentsRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Check attachment" id="0b3f614f-3b05-47c4-89cb-75bfe5f43c5d"><con:settings/><con:config><script>log.info " Attachment Name: " + testRunner.testCase.getTestStepByName( "receiveDocuments").testStep.testRequest.response.attachments[0].getName();
log.info " Attachment ContentType: " + testRunner.testCase.getTestStepByName( "receiveDocuments").testStep.testRequest.response.attachments[0].getContentType();
def attachment_stream = testRunner.testCase.getTestStepByName( "receiveDocuments").testStep.testRequest.response.attachments[0].getInputStream();
 InputStream base64DecoderStream = null;
 base64DecoderStream = javax.mail.internet.MimeUtility.decode(attachment_stream, "base64");
 java.util.zip.GZIPInputStream gis = new java.util.zip.GZIPInputStream(base64DecoderStream);
 def xml = gis.text;
 log.info "xml" + xml;
 def dhlId = testRunner.testCase.getPropertyValue( "dhl_id" )
assert xml.contains('dhl_id>'+ dhlId + '&lt;');
 </script></con:config></con:testStep><con:properties><con:property><con:name>dhl_id</con:name><con:value>967</con:value></con:property></con:properties></con:testCase><con:testCase id="194b60b2-7435-4481-823b-6d6569399f3d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="2.15. DHX süsteemist tulnud dokumendi  vastuvõetuks märkimine. Adressat toetab ainult 1.0 kapsli versiooni??" searchProperties="true" disabled="true"><con:description>Disabled, because need to uze different security server to test with different organisation which supports 1.0 capsule</con:description><con:settings/><con:testStep type="calltestcase" name="Send capsule 1.0" id="5868f94a-0f67-43f9-8e3a-304adecc5406"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2e8ab8e6-2927-49d4-a0dd-981c93d25cf3</con:targetTestCase><con:properties><con:property><con:name>dhxReceiptId</con:name><con:value>968</con:value></con:property></con:properties><con:returnProperties><con:entry>dhxReceiptId</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="Dhx receipt id as dhl_id" id="0ed508b4-b1ff-48ac-8373-aa209af0b2f2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>DHX receipt ID -> DVK document Id</con:name><con:sourceType>dhxReceiptId</con:sourceType><con:sourceStep>Send capsule 1.0</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>markDocumentsReceived</con:targetStep><con:targetPath>declare namespace dhl='http://producers.dhl.xtee.riik.ee/producer/dhl';
//dhl:markDocumentsReceived[1]/keha[1]/dokumendid[1]/item[1]/dhl_id[1]</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="08a067ed-0550-439f-a288-a10784084a6f" name="markDocumentsReceived"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>dhlHttpSoapPortSoapBinding</con:interface><con:operation>markDocumentsReceived</con:operation><con:request name="markDocumentsReceived" id="1990d329-c9c4-40d2-b518-db995b901165"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#dvkEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://producers.dhl.xtee.riik.ee/producer/dhl" xmlns:xsi="xsi">
    <soapenv:Header>
       <ns4:protocolVersion xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">4.0</ns4:protocolVersion>
    <ns4:id xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">64a3ddbd-1620-42c4-b2fe-60b854c2f32f
    </ns4:id>
         <ns4:client xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dhs4MemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dhs4MemberCode}</ns3:memberCode>
       <ns3:subsystemCode>${#Project#dhs4Subsystem}</ns3:subsystemCode>
    </ns4:client>
        <ns4:service ns3:objectType="SERVICE" xmlns:ns2="http://dhx.x-road.eu/producer" xmlns:ns3="http://x-road.eu/xsd/identifiers" xmlns:ns4="http://x-road.eu/xsd/xroad.xsd" xmlns:ns5="http://www.riik.ee/schemas/deccontainer/vers_2_1/">
      <ns3:xRoadInstance>${#Project#xroadInstance}</ns3:xRoadInstance>
      <ns3:memberClass>${#Project#dvkMemberClass}</ns3:memberClass>
      <ns3:memberCode>${#Project#dvkMemberCode}</ns3:memberCode>
      <ns3:subsystemCode>${#Project#dvkSubsystem}</ns3:subsystemCode>
      <ns3:serviceCode>markDocumentsReceived</ns3:serviceCode>
      <ns3:serviceVersion>v3</ns3:serviceVersion>
    </ns4:service>
   </soapenv:Header>
   <soapenv:Body>
      <dhl:markDocumentsReceived>
         <keha>
            <dokumendid xsi:type="SOAP-ENC:Array" SOAP-ENC:arrayType="dhl:asutus[3]">
        <item>
          <dhl_id>968</dhl_id>
        </item>
      </dokumendid>
         </keha>
      </dhl:markDocumentsReceived>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="69f5df2e-63d2-48a2-b6bc-7f4735ecabd9" name="SOAP Response"/><con:assertion type="Simple NotContains" id="bb2fe644-bb96-4a3f-8976-63f23a4f65af" name="Not Contains fault"><con:configuration><token>fault</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ffa5a026-e792-4525-8902-aeb7711bdc50" name="Contains keha"><con:configuration><token>&lt;keha>OK&lt;/keha></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/markDocumentsReceivedRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:mockService id="86b61246-98e4-4a62-b20a-86870ad2893a" port="8088" path="/mockdhlHttpSoapPortSoapBinding" host="bpw-PC" name="DVK mockService"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:properties/><con:mockOperation name="changeOrganizationData" id="6a49639f-8d6e-4a96-b9f5-8d17cc99d93c" interface="dhlHttpSoapPortSoapBinding" operation="changeOrganizationData"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="6cd5c188-009f-4023-b7d0-7711e9cf05d3" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://localhost:8084/dvk/services/dhlHttpSoapPort">
   <soapenv:Header/>
   <soapenv:Body>
      <dhl:changeOrganizationDataResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/changeOrganizationDataResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="deleteOldDocuments" id="fd73b803-4072-4c0f-9bf2-1380b469beeb" interface="dhlHttpSoapPortSoapBinding" operation="deleteOldDocuments"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="d9dc3d46-7088-4bc0-8bea-2bb51176c0a4" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://localhost:8084/dvk/services/dhlHttpSoapPort">
   <soapenv:Header/>
   <soapenv:Body>
      <dhl:deleteOldDocumentsResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/deleteOldDocumentsResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="getOccupationList" id="6834d064-192c-412a-9d1a-52d50d9122da" interface="dhlHttpSoapPortSoapBinding" operation="getOccupationList"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="452806c6-245f-4d64-9a5f-c4cc13afde19" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://localhost:8084/dvk/services/dhlHttpSoapPort">
   <soapenv:Header/>
   <soapenv:Body>
      <dhl:getOccupationListResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/getOccupationListResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="getSendingOptions" id="0b6a0068-59ca-4d04-8978-0e0487340f49" interface="dhlHttpSoapPortSoapBinding" operation="getSendingOptions"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="0a9f8818-bc8f-4752-8390-2ff7c0e05517" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://localhost:8084/dvk/services/dhlHttpSoapPort">
   <soapenv:Header/>
   <soapenv:Body>
      <dhl:getSendingOptionsResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/getSendingOptionsResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="getSendStatus" id="5447485d-4245-4a82-952d-17e264635cf1" interface="dhlHttpSoapPortSoapBinding" operation="getSendStatus"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="e69054a6-5fd9-4dc8-9df3-59b2b58a9182" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://localhost:8084/dvk/services/dhlHttpSoapPort">
   <soapenv:Header/>
   <soapenv:Body>
      <dhl:getSendStatusResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/getSendStatusResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="getSubdivisionList" id="d4be5b20-0e90-43bf-bc95-9deb3d8d9278" interface="dhlHttpSoapPortSoapBinding" operation="getSubdivisionList"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="50ddf8e3-3bb7-4133-b045-9529b8e815da" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://localhost:8084/dvk/services/dhlHttpSoapPort">
   <soapenv:Header/>
   <soapenv:Body>
      <dhl:getSubdivisionListResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/getSubdivisionListResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="listMethods" id="d341d8a7-a99a-4c50-9c04-24e4b7ec8531" interface="dhlHttpSoapPortSoapBinding" operation="listMethods"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="bd7150c8-a51b-4e18-a587-36a2ba1f6a53" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://localhost:8084/dvk/services/dhlHttpSoapPort">
   <soapenv:Header/>
   <soapenv:Body>
      <dhl:listMethodsResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/listMethodsResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="markDocumentsReceived" id="35957b59-c68e-4bb6-9d57-f755e516bc42" interface="dhlHttpSoapPortSoapBinding" operation="markDocumentsReceived"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="358f525f-4d60-4852-8112-8c7242eccb28" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://localhost:8084/dvk/services/dhlHttpSoapPort">
   <soapenv:Header/>
   <soapenv:Body>
      <dhl:markDocumentsReceivedResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/markDocumentsReceivedResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="receiveDocuments" id="5ede500e-7878-4c99-9714-3f1fdc24ca1b" interface="dhlHttpSoapPortSoapBinding" operation="receiveDocuments"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="3843ab60-66f7-4eb7-8164-dc8d3412ccf3" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://localhost:8084/dvk/services/dhlHttpSoapPort">
   <soapenv:Header/>
   <soapenv:Body>
      <dhl:receiveDocumentsResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/receiveDocumentsResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="runSystemCheck" id="a1b541e0-2ff9-440b-a5df-27c666357a52" interface="dhlHttpSoapPortSoapBinding" operation="runSystemCheck"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="01372fe9-197d-436b-a2cf-e6ffccc42239" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://localhost:8084/dvk/services/dhlHttpSoapPort">
   <soapenv:Header/>
   <soapenv:Body>
      <dhl:runSystemCheckResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/runSystemCheckResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="sendDocuments" id="e592aae0-8fa0-42a3-a32f-ed8a9118ce9e" interface="dhlHttpSoapPortSoapBinding" operation="sendDocuments"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="38931dfb-5af8-47a3-937f-e7ec9dbd71fa" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dhl="http://localhost:8084/dvk/services/dhlHttpSoapPort">
   <soapenv:Header/>
   <soapenv:Body>
      <dhl:sendDocumentsResponse soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://localhost:8084/dvk/services/dhlHttpSoapPort/CoreServices/sendDocumentsResponse"/></con:response><con:dispatchConfig/></con:mockOperation></con:mockService><con:mockService id="1a8eff8a-6c61-4ba2-9f88-d6577ec50e7b" port="8088" path="/mockdhxBinding" host="bpw-PC" name="DXH mockService"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:properties/><con:mockOperation name="representationList" id="ae951991-e630-48c9-b131-880e765c43bf" interface="dhxBinding" operation="representationList"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="8d312516-8750-46d2-9117-89a36bcd31f9" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xro="http://x-road.eu/xsd/xroad.xsd" xmlns:iden="http://x-road.eu/xsd/identifiers" xmlns:prod="http://dhx.x-road.eu/producer">
   <soapenv:Header>
      <xro:protocolVersion>?</xro:protocolVersion>
      <xro:issue>?</xro:issue>
      <xro:requestHash algorithmId="?">?</xro:requestHash>
      <xro:userId>?</xro:userId>
      <xro:id>?</xro:id>
      <xro:service iden:objectType="SERVICE">
         <iden:xRoadInstance>?</iden:xRoadInstance>
         <iden:memberClass>?</iden:memberClass>
         <iden:memberCode>?</iden:memberCode>
         <!--Optional:-->
         <iden:subsystemCode>?</iden:subsystemCode>
         <iden:serviceCode>?</iden:serviceCode>
         <!--Optional:-->
         <iden:serviceVersion>?</iden:serviceVersion>
      </xro:service>
      <xro:client iden:objectType="?">
         <iden:xRoadInstance>?</iden:xRoadInstance>
         <iden:memberClass>?</iden:memberClass>
         <iden:memberCode>?</iden:memberCode>
         <!--Optional:-->
         <iden:subsystemCode>?</iden:subsystemCode>
      </xro:client>
   </soapenv:Header>
   <soapenv:Body>
      <prod:representationListResponse>
         <prod:members>
            <!--Zero or more repetitions:-->
            <prod:member>
               <prod:memberCode>?</prod:memberCode>
               <prod:startDate>?</prod:startDate>
               <!--Optional:-->
               <prod:endDate>?</prod:endDate>
            </prod:member>
         </prod:members>
      </prod:representationListResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://dhx.x-road.eu/producer/dhxPortType/representationListResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="sendDocument" id="7b740b04-6849-48ab-8ca3-b45cf257343b" interface="dhxBinding" operation="sendDocument"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Response 1" id="808ff16a-8135-4273-91c2-82d7cff44080" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xro="http://x-road.eu/xsd/xroad.xsd" xmlns:rep="http://x-road.eu/xsd/representation.xsd" xmlns:iden="http://x-road.eu/xsd/identifiers" xmlns:prod="http://dhx.x-road.eu/producer">
   <soapenv:Header>
      <xro:protocolVersion>?</xro:protocolVersion>
      <xro:issue>?</xro:issue>
      <xro:requestHash algorithmId="?">?</xro:requestHash>
      <xro:userId>?</xro:userId>
      <xro:id>?</xro:id>
      <rep:representedParty>
         <!--Optional:-->
         <rep:partyClass>?</rep:partyClass>
         <rep:partyCode>?</rep:partyCode>
      </rep:representedParty>
      <xro:service iden:objectType="SERVICE">
         <iden:xRoadInstance>?</iden:xRoadInstance>
         <iden:memberClass>?</iden:memberClass>
         <iden:memberCode>?</iden:memberCode>
         <!--Optional:-->
         <iden:subsystemCode>?</iden:subsystemCode>
         <iden:serviceCode>?</iden:serviceCode>
         <!--Optional:-->
         <iden:serviceVersion>?</iden:serviceVersion>
      </xro:service>
      <xro:client iden:objectType="?">
         <iden:xRoadInstance>?</iden:xRoadInstance>
         <iden:memberClass>?</iden:memberClass>
         <iden:memberCode>?</iden:memberCode>
         <!--Optional:-->
         <iden:subsystemCode>?</iden:subsystemCode>
      </xro:client>
   </soapenv:Header>
   <soapenv:Body>
      <prod:sendDocumentResponse>
         <!--Optional:-->
         <prod:fault>
            <prod:faultCode>?</prod:faultCode>
            <prod:faultString>?</prod:faultString>
         </prod:fault>
         <prod:receiptId>?</prod:receiptId>
      </prod:sendDocumentResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://dhx.x-road.eu/producer/dhxPortType/sendDocumentResponse"/></con:response><con:dispatchConfig/></con:mockOperation></con:mockService><con:properties><con:property><con:name>dvkEndpoint</con:name><con:value>http://localhost:8080/ws</con:value></con:property><con:property><con:name>dhxEndpoint</con:name><con:value>http://localhost:8080/ws</con:value></con:property><con:property><con:name>xroadInstance</con:name><con:value>ee-dev</con:value></con:property><con:property><con:name>dhs2MemberClass</con:name><con:value>COM</con:value></con:property><con:property><con:name>dhs2MemberCode</con:name><con:value>30000001</con:value></con:property><con:property><con:name>dhs2Subsystem</con:name><con:value>DHX</con:value></con:property><con:property><con:name>dhs2Subsystem2</con:name><con:value>subsystem</con:value></con:property><con:property><con:name>dhs2RepresenteeCode</con:name><con:value>70000001</con:value></con:property><con:property><con:name>dvkMemberClass</con:name><con:value>GOV</con:value></con:property><con:property><con:name>dvkMemberCode</con:name><con:value>70006317</con:value></con:property><con:property><con:name>dvkDhxSubsystem</con:name><con:value>DHX.dvk</con:value></con:property><con:property><con:name>dvkSubsystem</con:name><con:value>dhl</con:value></con:property><con:property><con:name>dhs3MemberClass</con:name><con:value>GOV</con:value></con:property><con:property><con:name>dhs3MemberCode</con:name><con:value>70006317</con:value></con:property><con:property><con:name>dhs3Subsystem</con:name><con:value>generic-consumer</con:value></con:property><con:property><con:name>dhs3AdminUserId</con:name><con:value>EE38806190294</con:value></con:property><con:property><con:name>dhs3Subsystem2</con:name><con:value>adit</con:value></con:property><con:property><con:name>goodCapsule</con:name><con:value>c://oracle_migra/kapsel_21.xml</con:value></con:property><con:property><con:name>badCapsule</con:name><con:value>C:\Users\bpw.bpw-PC\git\dhx-etalon\src\main\resources\conf\etalon1\client\kapsel_21invalid.xml</con:value></con:property><con:property><con:name>notCapsule</con:name><con:value>C:\Users\bpw.bpw-PC\git\dhx-etalon\src\main\resources\conf\etalon1\client\kapsel_not_kapsel.txt</con:value></con:property><con:property><con:name>goodCapsule10</con:name><con:value>c://oracle_migra/test.xml</con:value></con:property><con:property><con:name>dhs4MemberCode</con:name><con:value>70006317</con:value></con:property><con:property><con:name>dhs4MemberClass</con:name><con:value>GOV</con:value></con:property><con:property><con:name>dhs4Subsystem</con:name><con:value>generic-consumer</con:value></con:property><con:property><con:name>dhs4AdminUserId</con:name><con:value>EE38806190294</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>